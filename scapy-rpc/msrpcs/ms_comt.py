# SPDX-License-Identifier: GPL-2.0-only
# This file is part of Scapy RPC
# See https://scapy.net/ for more information
# Copyright (C) Gabriel Potter

# [ms-comt] v10.0 (Tue, 23 Apr 2024)

"""
RPC definitions for the following interfaces:
- IUnknown (v0.0): 00000000-0000-0000-C000-000000000046
- IGetTrackingData (v0.0): B60040E0-BCF3-11D1-861D-0080C729264D
- IComTrackingInfoEvents (v0.0): 4E6CDCC9-FB25-4FD5-9CC5-C9F4B6559CEC
- IDispatch (v0.0): 00020400-0000-0000-C000-000000000046
- IProcessDump (v0.0): 23C9DD26-2355-4FE2-84DE-F779A238ADBD
This file is auto-generated by midl-to-scapy, do not modify.
"""

from enum import IntEnum
import uuid

from scapy.fields import StrFixedLenField, StrFixedLenFieldUtf16
from scapy.layers.dcerpc import (
    NDRPacket,
    DceRpcOp,
    NDRConfFieldListField,
    NDRConfPacketListField,
    NDRConfStrLenField,
    NDRConfStrLenFieldUtf16,
    NDRConfVarStrLenField,
    NDRConfVarStrLenFieldUtf16,
    NDRFullEmbPointerField,
    NDRFullPointerField,
    NDRInt3264Field,
    NDRIntField,
    NDRPacketField,
    NDRRecursiveField,
    NDRRefEmbPointerField,
    NDRShortField,
    NDRSignedIntField,
    NDRSignedLongField,
    register_com_interface,
)

IUNKNOWN_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire
}
register_com_interface(
    name="IUnknown",
    uuid=uuid.UUID("00000000-0000-0000-C000-000000000046"),
    opnums=IUNKNOWN_OPNUMS,
)


class ContainerStatistics(NDRPacket):
    ALIGNMENT = (4, 4)
    fields_desc = [
        NDRIntField("cCalls", 0),
        NDRIntField("cComponentInstances", 0),
        NDRIntField("cComponents", 0),
        NDRIntField("cCallsPerSecond", 0),
    ]


class ContainerData(NDRPacket):
    ALIGNMENT = (4, 4)
    fields_desc = [
        NDRIntField("dwLegacyId", 0),
        StrFixedLenFieldUtf16("wszApplicationIdentifier", "", length=40 * 2),
        NDRIntField("dwProcessId", 0),
        NDRPacketField("statistics", ContainerStatistics(), ContainerStatistics),
    ]


class GetContainerData_Request(NDRPacket):
    fields_desc = []


class GetContainerData_Response(NDRPacket):
    fields_desc = [
        NDRIntField("nContainers", None, size_of="aContainerData"),
        NDRConfPacketListField(
            "aContainerData",
            [],
            ContainerData,
            size_is=lambda pkt: pkt.nContainers,
            ptr_pack=True,
        ),
        NDRIntField("status", 0),
    ]


class GUID(NDRPacket):
    ALIGNMENT = (4, 4)
    fields_desc = [
        NDRIntField("Data1", 0),
        NDRShortField("Data2", 0),
        NDRShortField("Data3", 0),
        StrFixedLenField("Data4", "", length=8),
    ]


class ComponentData(NDRPacket):
    ALIGNMENT = (4, 4)
    fields_desc = [
        NDRPacketField("clsid", GUID(), GUID),
        NDRIntField("cTotalReferences", 0),
        NDRIntField("cBoundReferences", 0),
        NDRIntField("cPooledInstances", 0),
        NDRIntField("cInstancesInCall", 0),
        NDRIntField("dwResponseTime", 0),
        NDRIntField("cCallsCompleted", 0),
        NDRIntField("cCallsFailed", 0),
    ]


class GetComponentDataByContainer_Request(NDRPacket):
    fields_desc = [NDRIntField("idContainer", 0)]


class GetComponentDataByContainer_Response(NDRPacket):
    fields_desc = [
        NDRIntField("nComponents", None, size_of="aComponentData"),
        NDRConfPacketListField(
            "aComponentData",
            [],
            ComponentData,
            size_is=lambda pkt: pkt.nComponents,
            ptr_pack=True,
        ),
        NDRIntField("status", 0),
    ]


class GetComponentDataByContainerAndCLSID_Request(NDRPacket):
    fields_desc = [NDRIntField("idContainer", 0), NDRPacketField("clsid", GUID(), GUID)]


class GetComponentDataByContainerAndCLSID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("ppComponentData", ComponentData(), ComponentData)
        ),
        NDRIntField("status", 0),
    ]


IGETTRACKINGDATA_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    # 3: Opnum3NotUsedOnWire,
    4: DceRpcOp(GetContainerData_Request, GetContainerData_Response),
    5: DceRpcOp(
        GetComponentDataByContainer_Request, GetComponentDataByContainer_Response
    ),
    6: DceRpcOp(
        GetComponentDataByContainerAndCLSID_Request,
        GetComponentDataByContainerAndCLSID_Response,
    ),
    # 7: Opnum7NotUsedOnWire
}
register_com_interface(
    name="IGetTrackingData",
    uuid=uuid.UUID("B60040E0-BCF3-11D1-861D-0080C729264D"),
    opnums=IGETTRACKINGDATA_OPNUMS,
)


class MInterfacePointer(NDRPacket):
    ALIGNMENT = (4, 8)
    DEPORTED_CONFORMANTS = ["abData"]
    fields_desc = [
        NDRIntField("ulCntData", None, size_of="abData"),
        NDRConfStrLenField(
            "abData", "", size_is=lambda pkt: pkt.ulCntData, conformant_in_struct=True
        ),
    ]


class OnNewTrackingInfo_Request(NDRPacket):
    fields_desc = [
        NDRPacketField("pToplevelCollection", MInterfacePointer(), MInterfacePointer)
    ]


class OnNewTrackingInfo_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


ICOMTRACKINGINFOEVENTS_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(OnNewTrackingInfo_Request, OnNewTrackingInfo_Response)
}
register_com_interface(
    name="IComTrackingInfoEvents",
    uuid=uuid.UUID("4E6CDCC9-FB25-4FD5-9CC5-C9F4B6559CEC"),
    opnums=ICOMTRACKINGINFOEVENTS_OPNUMS,
)


class GetTypeInfoCount_Request(NDRPacket):
    fields_desc = []


class GetTypeInfoCount_Response(NDRPacket):
    fields_desc = [NDRIntField("pctinfo", 0), NDRIntField("status", 0)]


class GetTypeInfo_Request(NDRPacket):
    fields_desc = [NDRIntField("iTInfo", 0), NDRIntField("lcid", 0)]


class GetTypeInfo_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("ppTInfo", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class GetIDsOfNames_Request(NDRPacket):
    fields_desc = [
        NDRPacketField("riid", GUID(), GUID),
        NDRConfVarStrLenFieldUtf16("rgszNames", "", size_is=lambda pkt: pkt.cNames),
        NDRIntField("cNames", None, size_of="rgszNames"),
        NDRIntField("lcid", 0),
    ]


class GetIDsOfNames_Response(NDRPacket):
    fields_desc = [
        NDRConfFieldListField(
            "rgDispId", [], NDRSignedIntField("", 0), size_is=lambda pkt: pkt.cNames
        ),
        NDRIntField("status", 0),
    ]


class VARENUM(IntEnum):
    VT_EMPTY = 0
    VT_NULL = 1
    VT_I2 = 2
    VT_I4 = 3
    VT_R4 = 4
    VT_R8 = 5
    VT_CY = 6
    VT_DATE = 7
    VT_BSTR = 8
    VT_DISPATCH = 9
    VT_ERROR = 10
    VT_BOOL = 11
    VT_VARIANT = 12
    VT_UNKNOWN = 13
    VT_DECIMAL = 14
    VT_I1 = 16
    VT_UI1 = 17
    VT_UI2 = 18
    VT_UI4 = 19
    VT_I8 = 20
    VT_UI8 = 21
    VT_INT = 22
    VT_UINT = 23
    VT_VOID = 24
    VT_HRESULT = 25
    VT_PTR = 26
    VT_SAFEARRAY = 27
    VT_CARRAY = 28
    VT_USERDEFINED = 29
    VT_LPSTR = 30
    VT_LPWSTR = 31
    VT_RECORD = 36
    VT_INT_PTR = 37
    VT_UINT_PTR = 38
    VT_ARRAY = 8192
    VT_BYREF = 16384


class CURRENCY(NDRPacket):
    ALIGNMENT = (8, 8)
    fields_desc = [NDRSignedLongField("int64", 0)]


class FLAGGED_WORD_BLOB(NDRPacket):
    ALIGNMENT = (4, 8)
    DEPORTED_CONFORMANTS = ["asData"]
    fields_desc = [
        NDRIntField("cBytes", 0),
        NDRIntField("clSize", None, size_of="asData"),
        NDRConfStrLenFieldUtf16(
            "asData", "", size_is=lambda pkt: pkt.clSize, conformant_in_struct=True
        ),
    ]


class SF_TYPE(IntEnum):
    SF_ERROR = VARENUM.VT_ERROR
    SF_I1 = VARENUM.VT_I1
    SF_I2 = VARENUM.VT_I2
    SF_I4 = VARENUM.VT_I4
    SF_I8 = VARENUM.VT_I8
    SF_BSTR = VARENUM.VT_BSTR
    SF_UNKNOWN = VARENUM.VT_UNKNOWN
    SF_DISPATCH = VARENUM.VT_DISPATCH
    SF_VARIANT = VARENUM.VT_VARIANT
    SF_RECORD = VARENUM.VT_RECORD
    SF_HAVEIID = VARENUM.VT_UNKNOWN | 32768


class SAFEARR_BSTR(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("Size", None, size_of="aBstr"),
        NDRRefEmbPointerField(
            NDRConfPacketListField(
                "aBstr", [], FLAGGED_WORD_BLOB, size_is=lambda pkt: pkt.Size
            )
        ),
    ]


class SAFEARR_UNKNOWN(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("Size", None, size_of="apUnknown"),
        NDRRefEmbPointerField(
            NDRConfPacketListField(
                "apUnknown", [], MInterfacePointer, size_is=lambda pkt: pkt.Size
            )
        ),
    ]


class SAFEARR_DISPATCH(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("Size", None, size_of="apDispatch"),
        NDRRefEmbPointerField(
            NDRConfPacketListField(
                "apDispatch", [], MInterfacePointer, size_is=lambda pkt: pkt.Size
            )
        ),
    ]


class wireVARIANTStr(NDRPacket):
    ALIGNMENT = (4, 4)
    fields_desc = [
        NDRIntField("clSize", 0),
        NDRIntField("rpcReserved", 0),
        NDRShortField("vt", 0),
        NDRShortField("wReserved1", 0),
        NDRShortField("wReserved2", 0),
        NDRShortField("wReserved3", 0),
        NDRRecursiveField("_varUnion"),
    ]


class DISPPARAMS(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRFullEmbPointerField(
            NDRConfPacketListField(
                "rgvarg",
                [],
                wireVARIANTStr,
                size_is=lambda pkt: pkt.cArgs,
                ptr_pack=True,
            )
        ),
        NDRFullEmbPointerField(
            NDRConfFieldListField(
                "rgdispidNamedArgs",
                [],
                NDRSignedIntField("rgdispidNamedArgs", 0),
                size_is=lambda pkt: pkt.cNamedArgs,
            )
        ),
        NDRIntField("cArgs", None, size_of="rgvarg"),
        NDRIntField("cNamedArgs", None, size_of="rgdispidNamedArgs"),
    ]


class EXCEPINFO(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRShortField("wCode", 0),
        NDRShortField("wReserved", 0),
        NDRFullEmbPointerField(
            NDRPacketField("bstrSource", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRFullEmbPointerField(
            NDRPacketField("bstrDescription", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRFullEmbPointerField(
            NDRPacketField("bstrHelpFile", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("dwHelpContext", 0),
        NDRInt3264Field("pvReserved", 0),
        NDRInt3264Field("pfnDeferredFillIn", 0),
        NDRSignedIntField("scode", 0),
    ]


class Invoke_Request(NDRPacket):
    fields_desc = [
        NDRSignedIntField("dispIdMember", 0),
        NDRPacketField("riid", GUID(), GUID),
        NDRIntField("lcid", 0),
        NDRIntField("dwFlags", 0),
        NDRPacketField("pDispParams", DISPPARAMS(), DISPPARAMS),
        NDRIntField("cVarRef", None, size_of="rgVarRef"),
        NDRConfFieldListField(
            "rgVarRefIdx", [], NDRIntField("", 0), size_is=lambda pkt: pkt.cVarRef
        ),
        NDRConfPacketListField(
            "rgVarRef",
            [],
            wireVARIANTStr,
            size_is=lambda pkt: pkt.cVarRef,
            ptr_pack=True,
        ),
    ]


class Invoke_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("pVarResult", wireVARIANTStr(), wireVARIANTStr)
        ),
        NDRPacketField("pExcepInfo", EXCEPINFO(), EXCEPINFO),
        NDRIntField("pArgErr", 0),
        NDRConfPacketListField(
            "rgVarRef",
            [],
            wireVARIANTStr,
            size_is=lambda pkt: pkt.cVarRef,
            ptr_pack=True,
        ),
        NDRIntField("status", 0),
    ]


IDISPATCH_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
}
register_com_interface(
    name="IDispatch",
    uuid=uuid.UUID("00020400-0000-0000-C000-000000000046"),
    opnums=IDISPATCH_OPNUMS,
)


class IsSupported_Request(NDRPacket):
    fields_desc = []


class IsSupported_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class DumpProcess_Request(NDRPacket):
    fields_desc = [
        NDRPacketField("bstrContainerID", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
        NDRPacketField("bstrDirectory", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
        NDRIntField("dwMaxFiles", 0),
    ]


class DumpProcess_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("pbstrDumpFile", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


IPROCESSDUMP_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(IsSupported_Request, IsSupported_Response),
    8: DceRpcOp(DumpProcess_Request, DumpProcess_Response),
}
register_com_interface(
    name="IProcessDump",
    uuid=uuid.UUID("23C9DD26-2355-4FE2-84DE-F779A238ADBD"),
    opnums=IPROCESSDUMP_OPNUMS,
)
