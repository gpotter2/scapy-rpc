# SPDX-License-Identifier: GPL-2.0-only
# This file is part of Scapy RPC
# See https://scapy.net/ for more information
# Copyright (C) Gabriel Potter

# [ms-uamg] v14.0 (Tue, 23 Apr 2024)

"""
RPC definitions for the following interfaces:
- IUnknown (v0.0): 00000000-0000-0000-C000-000000000046
- IDispatch (v0.0): 00020400-0000-0000-C000-000000000046
- ICategoryCollection (v0.0): 3a56bfb8-576c-43f7-9335-fe4838fd7e37
- IUpdateCollection (v0.0): 07f7438c-7709-4ca5-b518-91279288134e
- IUpdate (v0.0): 6a92b07a-d821-4682-b423-5c805022cc4d
- IUpdateServiceManager (v0.0): 23857e3c-02ba-44a3-9423-b1c900805f37
- IUpdateServiceManager2 (v0.0): 0bb8531d-7e8d-424f-986c-a0b8f60a3e7b
- IStringCollection (v0.0): eff90582-2ddc-480f-a06d-60f3fbc362c3
- IWindowsUpdateAgentInfo (v0.0): 85713fa1-7796-4fa2-be3b-e2d6124dd373
- IAutomaticUpdatesResults (v0.0): E7A4D634-7942-4DD9-A111-82228BA33901
- IAutomaticUpdates (v0.0): 673425bf-c082-4c7c-bdfd-569464b8e0ce
- IAutomaticUpdates2 (v0.0): 4A2F5C31-CFD9-410E-B7FB-29A653973A0F
- IUpdateIdentity (v0.0): 46297823-9940-4c09-aed9-cd3ea6d05968
- IImageInformation (v0.0): 7c907864-346c-4aeb-8f3f-57da289f969f
- ICategory (v0.0): 81ddc1b8-9d35-47a6-b471-5b80f519223b
- IInstallationBehavior (v0.0): d9a59339-e245-4dbd-9686-4d5763e39624
- IUpdateDownloadContent (v0.0): 54a2cb2d-9a0c-48b6-8a50-9abb69ee2d02
- IUpdateDownloadContent2 (v0.0): c97ad11b-f257-420b-9d9f-377f733f6f68
- IUpdateDownloadContentCollection (v0.0): bc5513c8-b3b8-4bf7-a4d4-361c0d8c88ba
- IWindowsDriverUpdate (v0.0): b383cd1a-5ce9-4504-9f63-764b1236f191
- IUpdate2 (v0.0): 144fe9b0-d23d-4a8b-8634-fb4457533b7a
- IUpdate3 (v0.0): 112EDA6B-95B3-476F-9D90-AEE82C6B8181
- IUpdate4 (v0.0): 27e94b0d-5139-49a2-9a61-93522dc54652
- IUpdate5 (v0.0): C1C2F21A-D2F4-4902-B5C6-8A081C19A890
- IWindowsDriverUpdateEntry (v0.0): ED8BFE40-A60B-42ea-9652-817DFCFA23EC
- IWindowsDriverUpdateEntryCollection (v0.0): 0D521700-A372-4bef-828B-3D00C10ADEBD
- IWindowsDriverUpdate2 (v0.0): 615c4269-7a48-43bd-96b7-bf6ca27d6c3e
- IWindowsDriverUpdate3 (v0.0): 49EBD502-4A96-41BD-9E3E-4C5057F4250C
- IWindowsDriverUpdate4 (v0.0): 004C6A2B-0C19-4c69-9F5C-A269B2560DB9
- IWindowsDriverUpdate5 (v0.0): 70CF5C82-8642-42bb-9DBC-0CFD263C6C4F
- IUpdateException (v0.0): a376dd5e-09d4-427f-af7c-fed5b6e1c1d6
- IUpdateExceptionCollection (v0.0): 503626a3-8e14-4729-9355-0fe664bd2321
- ISearchResult (v0.0): d40cff62-e08c-4498-941a-01e25f0fd33c
- IUpdateHistoryEntry (v0.0): be56a644-af0e-4e0e-a311-c1d8e695cbff
- IUpdateHistoryEntry2 (v0.0): c2bfb780-4539-4132-ab8c-0a8772013ab6
- IUpdateHistoryEntryCollection (v0.0): a7f04f3c-a290-435b-aadf-a116c3357a5c
- IUpdateSearcher (v0.0): 8f45abf1-f9ae-4b95-a933-f0f66e5056ea
- IUpdateSearcher2 (v0.0): 4cbdcb2d-1589-4beb-bd1c-3e582ff0add0
- IUpdateSearcher3 (v0.0): 04C6895D-EAF2-4034-97F3-311DE9BE413A
- IUpdateSession (v0.0): 816858a4-260d-4260-933a-2585f1abc76b
- IUpdateSession2 (v0.0): 91caf7b0-eb23-49ed-9937-c52d817f46f7
- IUpdateSession3 (v0.0): 918EFD1E-B5D8-4c90-8540-AEB9BDC56F9D
- IUpdateService (v0.0): 76b3b17e-aed6-4da5-85f0-83587f81abe3
- IUpdateService2 (v0.0): 1518b460-6518-4172-940f-c75883b24ceb
- IUpdateServiceCollection (v0.0): 9b0353aa-0e52-44ff-b8b0-1f7fa0437f88
- IUpdateServiceRegistration (v0.0): dde02280-12b3-4e0b-937b-6747f6acb286
This file is auto-generated by midl-to-scapy, do not modify.
"""

from enum import IntEnum
import uuid

from scapy.fields import StrFixedLenField
from scapy.layers.dcerpc import (
    NDRPacket,
    DceRpcOp,
    NDRConfFieldListField,
    NDRConfPacketListField,
    NDRConfStrLenField,
    NDRConfStrLenFieldUtf16,
    NDRConfVarStrLenField,
    NDRConfVarStrLenFieldUtf16,
    NDRFullEmbPointerField,
    NDRFullPointerField,
    NDRIEEEDoubleField,
    NDRIEEEFloatField,
    NDRInt3264Field,
    NDRIntEnumField,
    NDRIntField,
    NDRLongField,
    NDRPacketField,
    NDRRecursiveClass,
    NDRRefEmbPointerField,
    NDRShortField,
    NDRSignedByteField,
    NDRSignedIntField,
    NDRSignedLongField,
    NDRSignedShortField,
    NDRUnionField,
    register_com_interface,
)

IUNKNOWN_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire
}
register_com_interface(
    name="IUnknown",
    uuid=uuid.UUID("00000000-0000-0000-C000-000000000046"),
    opnums=IUNKNOWN_OPNUMS,
)


class GetTypeInfoCount_Request(NDRPacket):
    fields_desc = []


class GetTypeInfoCount_Response(NDRPacket):
    fields_desc = [NDRIntField("pctinfo", 0), NDRIntField("status", 0)]


class MInterfacePointer(NDRPacket):
    ALIGNMENT = (4, 8)
    DEPORTED_CONFORMANTS = ["abData"]
    fields_desc = [
        NDRIntField("ulCntData", None, size_of="abData"),
        NDRConfStrLenField(
            "abData", "", size_is=lambda pkt: pkt.ulCntData, conformant_in_struct=True
        ),
    ]


class GetTypeInfo_Request(NDRPacket):
    fields_desc = [NDRIntField("iTInfo", 0), NDRIntField("lcid", 0)]


class GetTypeInfo_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("ppTInfo", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class GUID(NDRPacket):
    ALIGNMENT = (4, 4)
    fields_desc = [
        NDRIntField("Data1", 0),
        NDRShortField("Data2", 0),
        NDRShortField("Data3", 0),
        StrFixedLenField("Data4", "", length=8),
    ]


class GetIDsOfNames_Request(NDRPacket):
    fields_desc = [
        NDRPacketField("riid", GUID(), GUID),
        NDRConfVarStrLenFieldUtf16("rgszNames", "", size_is=lambda pkt: pkt.cNames),
        NDRIntField("cNames", None, size_of="rgszNames"),
        NDRIntField("lcid", 0),
    ]


class GetIDsOfNames_Response(NDRPacket):
    fields_desc = [
        NDRConfFieldListField(
            "rgDispId", [], NDRSignedIntField("", 0), size_is=lambda pkt: pkt.cNames
        ),
        NDRIntField("status", 0),
    ]


class VARENUM(IntEnum):
    VT_EMPTY = 0
    VT_NULL = 1
    VT_I2 = 2
    VT_I4 = 3
    VT_R4 = 4
    VT_R8 = 5
    VT_CY = 6
    VT_DATE = 7
    VT_BSTR = 8
    VT_DISPATCH = 9
    VT_ERROR = 10
    VT_BOOL = 11
    VT_VARIANT = 12
    VT_UNKNOWN = 13
    VT_DECIMAL = 14
    VT_I1 = 16
    VT_UI1 = 17
    VT_UI2 = 18
    VT_UI4 = 19
    VT_I8 = 20
    VT_UI8 = 21
    VT_INT = 22
    VT_UINT = 23
    VT_VOID = 24
    VT_HRESULT = 25
    VT_PTR = 26
    VT_SAFEARRAY = 27
    VT_CARRAY = 28
    VT_USERDEFINED = 29
    VT_LPSTR = 30
    VT_LPWSTR = 31
    VT_RECORD = 36
    VT_INT_PTR = 37
    VT_UINT_PTR = 38
    VT_ARRAY = 8192
    VT_BYREF = 16384


class CURRENCY(NDRPacket):
    ALIGNMENT = (8, 8)
    fields_desc = [NDRSignedLongField("int64", 0)]


class FLAGGED_WORD_BLOB(NDRPacket):
    ALIGNMENT = (4, 8)
    DEPORTED_CONFORMANTS = ["asData"]
    fields_desc = [
        NDRIntField("cBytes", 0),
        NDRIntField("clSize", None, size_of="asData"),
        NDRConfStrLenFieldUtf16(
            "asData", "", size_is=lambda pkt: pkt.clSize, conformant_in_struct=True
        ),
    ]


class SF_TYPE(IntEnum):
    SF_ERROR = VARENUM.VT_ERROR
    SF_I1 = VARENUM.VT_I1
    SF_I2 = VARENUM.VT_I2
    SF_I4 = VARENUM.VT_I4
    SF_I8 = VARENUM.VT_I8
    SF_BSTR = VARENUM.VT_BSTR
    SF_UNKNOWN = VARENUM.VT_UNKNOWN
    SF_DISPATCH = VARENUM.VT_DISPATCH
    SF_VARIANT = VARENUM.VT_VARIANT
    SF_RECORD = VARENUM.VT_RECORD
    SF_HAVEIID = VARENUM.VT_UNKNOWN | 32768


class SAFEARR_BSTR(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("Size", None, size_of="aBstr"),
        NDRRefEmbPointerField(
            NDRConfPacketListField(
                "aBstr",
                [],
                FLAGGED_WORD_BLOB,
                size_is=lambda pkt: pkt.Size,
                ptr_pack=True,
            )
        ),
    ]


class SAFEARR_UNKNOWN(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("Size", None, size_of="apUnknown"),
        NDRRefEmbPointerField(
            NDRConfPacketListField(
                "apUnknown",
                [],
                MInterfacePointer,
                size_is=lambda pkt: pkt.Size,
                ptr_pack=True,
            )
        ),
    ]


class SAFEARR_DISPATCH(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("Size", None, size_of="apDispatch"),
        NDRRefEmbPointerField(
            NDRConfPacketListField(
                "apDispatch",
                [],
                MInterfacePointer,
                size_is=lambda pkt: pkt.Size,
                ptr_pack=True,
            )
        ),
    ]


class SAFEARR_VARIANT(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("Size", None, size_of="aVariant"),
        NDRRefEmbPointerField(
            NDRConfPacketListField(
                "aVariant",
                [],
                NDRRecursiveClass("wireVARIANTStr"),
                size_is=lambda pkt: pkt.Size,
                ptr_pack=True,
            )
        ),
    ]


class wireBRECORDStr(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("fFlags", 0),
        NDRIntField("clSize", None, size_of="pRecord"),
        NDRFullEmbPointerField(
            NDRPacketField("pRecInfo", MInterfacePointer(), MInterfacePointer)
        ),
        NDRFullEmbPointerField(
            NDRConfStrLenField("pRecord", "", size_is=lambda pkt: pkt.clSize)
        ),
    ]


class SAFEARR_BRECORD(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("Size", None, size_of="aRecord"),
        NDRRefEmbPointerField(
            NDRConfPacketListField(
                "aRecord",
                [],
                wireBRECORDStr,
                size_is=lambda pkt: pkt.Size,
                ptr_pack=True,
            )
        ),
    ]


class SAFEARR_HAVEIID(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("Size", None, size_of="apUnknown"),
        NDRRefEmbPointerField(
            NDRConfPacketListField(
                "apUnknown",
                [],
                MInterfacePointer,
                size_is=lambda pkt: pkt.Size,
                ptr_pack=True,
            )
        ),
        NDRPacketField("iid", GUID(), GUID),
    ]


class BYTE_SIZEDARR(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("clSize", None, size_of="pData"),
        NDRFullEmbPointerField(
            NDRConfStrLenField("pData", "", size_is=lambda pkt: pkt.clSize)
        ),
    ]


class WORD_SIZEDARR(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("clSize", None, size_of="pData"),
        NDRFullEmbPointerField(
            NDRConfStrLenFieldUtf16("pData", "", size_is=lambda pkt: pkt.clSize)
        ),
    ]


class DWORD_SIZEDARR(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("clSize", None, size_of="pData"),
        NDRFullEmbPointerField(
            NDRConfFieldListField(
                "pData", [], NDRIntField("", 0), size_is=lambda pkt: pkt.clSize
            )
        ),
    ]


class HYPER_SIZEDARR(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRIntField("clSize", None, size_of="pData"),
        NDRFullEmbPointerField(
            NDRConfFieldListField(
                "pData", [], NDRSignedLongField("", 0), size_is=lambda pkt: pkt.clSize
            )
        ),
    ]


class SAFEARRAYBOUND(NDRPacket):
    ALIGNMENT = (4, 4)
    fields_desc = [NDRIntField("cElements", 0), NDRSignedIntField("lLbound", 0)]


class SAFEARRAY(NDRPacket):
    ALIGNMENT = (4, 8)
    DEPORTED_CONFORMANTS = ["rgsabound"]
    fields_desc = [
        NDRShortField("cDims", None, size_of="rgsabound"),
        NDRShortField("fFeatures", 0),
        NDRIntField("cbElements", 0),
        NDRIntField("cLocks", 0),
        NDRUnionField(
            [
                (
                    NDRPacketField("uArrayStructs", SAFEARR_BSTR(), SAFEARR_BSTR),
                    (
                        (lambda pkt: None == SF_TYPE.SF_BSTR),
                        (lambda _, val: val.tag == SF_TYPE.SF_BSTR),
                    ),
                ),
                (
                    NDRPacketField("uArrayStructs", SAFEARR_UNKNOWN(), SAFEARR_UNKNOWN),
                    (
                        (lambda pkt: None == SF_TYPE.SF_UNKNOWN),
                        (lambda _, val: val.tag == SF_TYPE.SF_UNKNOWN),
                    ),
                ),
                (
                    NDRPacketField(
                        "uArrayStructs", SAFEARR_DISPATCH(), SAFEARR_DISPATCH
                    ),
                    (
                        (lambda pkt: None == SF_TYPE.SF_DISPATCH),
                        (lambda _, val: val.tag == SF_TYPE.SF_DISPATCH),
                    ),
                ),
                (
                    NDRPacketField("uArrayStructs", SAFEARR_VARIANT(), SAFEARR_VARIANT),
                    (
                        (lambda pkt: None == SF_TYPE.SF_VARIANT),
                        (lambda _, val: val.tag == SF_TYPE.SF_VARIANT),
                    ),
                ),
                (
                    NDRPacketField("uArrayStructs", SAFEARR_BRECORD(), SAFEARR_BRECORD),
                    (
                        (lambda pkt: None == SF_TYPE.SF_RECORD),
                        (lambda _, val: val.tag == SF_TYPE.SF_RECORD),
                    ),
                ),
                (
                    NDRPacketField("uArrayStructs", SAFEARR_HAVEIID(), SAFEARR_HAVEIID),
                    (
                        (lambda pkt: None == SF_TYPE.SF_HAVEIID),
                        (lambda _, val: val.tag == SF_TYPE.SF_HAVEIID),
                    ),
                ),
                (
                    NDRPacketField("uArrayStructs", BYTE_SIZEDARR(), BYTE_SIZEDARR),
                    (
                        (lambda pkt: None == SF_TYPE.SF_I1),
                        (lambda _, val: val.tag == SF_TYPE.SF_I1),
                    ),
                ),
                (
                    NDRPacketField("uArrayStructs", WORD_SIZEDARR(), WORD_SIZEDARR),
                    (
                        (lambda pkt: None == SF_TYPE.SF_I2),
                        (lambda _, val: val.tag == SF_TYPE.SF_I2),
                    ),
                ),
                (
                    NDRPacketField("uArrayStructs", DWORD_SIZEDARR(), DWORD_SIZEDARR),
                    (
                        (lambda pkt: None == SF_TYPE.SF_I4),
                        (lambda _, val: val.tag == SF_TYPE.SF_I4),
                    ),
                ),
                (
                    NDRPacketField("uArrayStructs", HYPER_SIZEDARR(), HYPER_SIZEDARR),
                    (
                        (lambda pkt: None == SF_TYPE.SF_I8),
                        (lambda _, val: val.tag == SF_TYPE.SF_I8),
                    ),
                ),
            ],
            StrFixedLenField("uArrayStructs", "", length=0),
            align=(4, 8),
            switch_fmt=("I", "I"),
        ),
        NDRConfPacketListField(
            "rgsabound",
            [],
            SAFEARRAYBOUND,
            size_is=lambda pkt: pkt.cDims,
            conformant_in_struct=True,
        ),
    ]


class DECIMAL(NDRPacket):
    ALIGNMENT = (8, 8)
    fields_desc = [
        NDRShortField("wReserved", 0),
        NDRSignedByteField("scale", 0),
        NDRSignedByteField("sign", 0),
        NDRIntField("Hi32", 0),
        NDRLongField("Lo64", 0),
    ]


class wireVARIANTStr(NDRPacket):
    ALIGNMENT = (8, 8)
    fields_desc = [
        NDRIntField("clSize", 0),
        NDRIntField("rpcReserved", 0),
        NDRShortField("vt", 0),
        NDRShortField("wReserved1", 0),
        NDRShortField("wReserved2", 0),
        NDRShortField("wReserved3", 0),
        NDRUnionField(
            [
                (
                    NDRSignedLongField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_I8),
                        (lambda _, val: val.tag == VARENUM.VT_I8),
                    ),
                ),
                (
                    NDRSignedIntField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_I4),
                        (lambda _, val: val.tag == VARENUM.VT_I4),
                    ),
                ),
                (
                    NDRSignedByteField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_UI1),
                        (lambda _, val: val.tag == VARENUM.VT_UI1),
                    ),
                ),
                (
                    NDRSignedShortField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_I2),
                        (lambda _, val: val.tag == VARENUM.VT_I2),
                    ),
                ),
                (
                    NDRIEEEFloatField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_R4),
                        (lambda _, val: val.tag == VARENUM.VT_R4),
                    ),
                ),
                (
                    NDRIEEEDoubleField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_R8),
                        (lambda _, val: val.tag == VARENUM.VT_R8),
                    ),
                ),
                (
                    NDRSignedShortField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_BOOL),
                        (lambda _, val: val.tag == VARENUM.VT_BOOL),
                    ),
                ),
                (
                    NDRSignedIntField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_ERROR),
                        (lambda _, val: val.tag == VARENUM.VT_ERROR),
                    ),
                ),
                (
                    NDRPacketField("_varUnion", CURRENCY(), CURRENCY),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_CY),
                        (lambda _, val: val.tag == VARENUM.VT_CY),
                    ),
                ),
                (
                    NDRIEEEDoubleField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_DATE),
                        (lambda _, val: val.tag == VARENUM.VT_DATE),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRPacketField(
                            "_varUnion", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB
                        )
                    ),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_BSTR),
                        (lambda _, val: val.tag == VARENUM.VT_BSTR),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRPacketField(
                            "_varUnion", MInterfacePointer(), MInterfacePointer
                        )
                    ),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_UNKNOWN),
                        (lambda _, val: val.tag == VARENUM.VT_UNKNOWN),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRPacketField(
                            "_varUnion", MInterfacePointer(), MInterfacePointer
                        )
                    ),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_DISPATCH),
                        (lambda _, val: val.tag == VARENUM.VT_DISPATCH),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRFullEmbPointerField(
                            NDRPacketField("_varUnion", SAFEARRAY(), SAFEARRAY)
                        )
                    ),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_ARRAY),
                        (lambda _, val: val.tag == VARENUM.VT_ARRAY),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRPacketField("_varUnion", wireBRECORDStr(), wireBRECORDStr)
                    ),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            in [
                                VARENUM.VT_RECORD,
                                (VARENUM.VT_RECORD | VARENUM.VT_BYREF),
                            ]
                        ),
                        (
                            lambda _, val: val.tag
                            in [
                                VARENUM.VT_RECORD,
                                (VARENUM.VT_RECORD | VARENUM.VT_BYREF),
                            ]
                        ),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRSignedByteField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_UI1 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_UI1 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRSignedShortField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_I2 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_I2 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRSignedIntField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_I4 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_I4 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRSignedLongField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_I8 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_I8 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRIEEEFloatField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_R4 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_R4 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRIEEEDoubleField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_R8 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_R8 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRSignedShortField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_BOOL | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_BOOL | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRSignedIntField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_ERROR | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_ERROR | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRPacketField("_varUnion", CURRENCY(), CURRENCY)
                    ),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_CY | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_CY | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRIEEEDoubleField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_DATE | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_DATE | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRFullEmbPointerField(
                            NDRPacketField(
                                "_varUnion", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB
                            )
                        )
                    ),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_BSTR | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_BSTR | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRFullEmbPointerField(
                            NDRPacketField(
                                "_varUnion", MInterfacePointer(), MInterfacePointer
                            )
                        )
                    ),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_UNKNOWN | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_UNKNOWN | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRFullEmbPointerField(
                            NDRPacketField(
                                "_varUnion", MInterfacePointer(), MInterfacePointer
                            )
                        )
                    ),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_DISPATCH | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_DISPATCH | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRFullEmbPointerField(
                            NDRFullEmbPointerField(
                                NDRPacketField("_varUnion", SAFEARRAY(), SAFEARRAY)
                            )
                        )
                    ),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_ARRAY | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_ARRAY | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRFullEmbPointerField(
                            NDRPacketField(
                                "_varUnion", None, NDRRecursiveClass("wireVARIANTStr")
                            )
                        )
                    ),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_VARIANT | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_VARIANT | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    NDRSignedByteField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_I1),
                        (lambda _, val: val.tag == VARENUM.VT_I1),
                    ),
                ),
                (
                    NDRShortField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_UI2),
                        (lambda _, val: val.tag == VARENUM.VT_UI2),
                    ),
                ),
                (
                    NDRIntField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_UI4),
                        (lambda _, val: val.tag == VARENUM.VT_UI4),
                    ),
                ),
                (
                    NDRLongField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_UI8),
                        (lambda _, val: val.tag == VARENUM.VT_UI8),
                    ),
                ),
                (
                    NDRSignedIntField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_INT),
                        (lambda _, val: val.tag == VARENUM.VT_INT),
                    ),
                ),
                (
                    NDRIntField("_varUnion", 0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_UINT),
                        (lambda _, val: val.tag == VARENUM.VT_UINT),
                    ),
                ),
                (
                    NDRPacketField("_varUnion", DECIMAL(), DECIMAL),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_DECIMAL),
                        (lambda _, val: val.tag == VARENUM.VT_DECIMAL),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRSignedByteField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_I1 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_I1 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRShortField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_UI2 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_UI2 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRIntField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_UI4 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_UI4 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRLongField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_UI8 | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_UI8 | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRSignedIntField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_INT | VARENUM.VT_BYREF)
                        ),
                        (lambda _, val: val.tag == (VARENUM.VT_INT | VARENUM.VT_BYREF)),
                    ),
                ),
                (
                    NDRFullEmbPointerField(NDRIntField("_varUnion", 0)),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_UINT | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_UINT | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    NDRFullEmbPointerField(
                        NDRPacketField("_varUnion", DECIMAL(), DECIMAL)
                    ),
                    (
                        (
                            lambda pkt: getattr(pkt, "vt", None)
                            == (VARENUM.VT_DECIMAL | VARENUM.VT_BYREF)
                        ),
                        (
                            lambda _, val: val.tag
                            == (VARENUM.VT_DECIMAL | VARENUM.VT_BYREF)
                        ),
                    ),
                ),
                (
                    StrFixedLenField("_varUnion", "", length=0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_EMPTY),
                        (lambda _, val: val.tag == VARENUM.VT_EMPTY),
                    ),
                ),
                (
                    StrFixedLenField("_varUnion", "", length=0),
                    (
                        (lambda pkt: getattr(pkt, "vt", None) == VARENUM.VT_NULL),
                        (lambda _, val: val.tag == VARENUM.VT_NULL),
                    ),
                ),
            ],
            StrFixedLenField("_varUnion", "", length=0),
            align=(2, 8),
            switch_fmt=("H", "H"),
        ),
    ]


class DISPPARAMS(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRFullEmbPointerField(
            NDRConfPacketListField(
                "rgvarg",
                [],
                wireVARIANTStr,
                size_is=lambda pkt: pkt.cArgs,
                ptr_pack=True,
            )
        ),
        NDRFullEmbPointerField(
            NDRConfFieldListField(
                "rgdispidNamedArgs",
                [],
                NDRSignedIntField("", 0),
                size_is=lambda pkt: pkt.cNamedArgs,
            )
        ),
        NDRIntField("cArgs", None, size_of="rgvarg"),
        NDRIntField("cNamedArgs", None, size_of="rgdispidNamedArgs"),
    ]


class EXCEPINFO(NDRPacket):
    ALIGNMENT = (4, 8)
    fields_desc = [
        NDRShortField("wCode", 0),
        NDRShortField("wReserved", 0),
        NDRFullEmbPointerField(
            NDRPacketField("bstrSource", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRFullEmbPointerField(
            NDRPacketField("bstrDescription", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRFullEmbPointerField(
            NDRPacketField("bstrHelpFile", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("dwHelpContext", 0),
        NDRInt3264Field("pvReserved", 0),
        NDRInt3264Field("pfnDeferredFillIn", 0),
        NDRSignedIntField("scode", 0),
    ]


class Invoke_Request(NDRPacket):
    fields_desc = [
        NDRSignedIntField("dispIdMember", 0),
        NDRPacketField("riid", GUID(), GUID),
        NDRIntField("lcid", 0),
        NDRIntField("dwFlags", 0),
        NDRPacketField("pDispParams", DISPPARAMS(), DISPPARAMS),
        NDRIntField("cVarRef", None, size_of="rgVarRef"),
        NDRConfFieldListField(
            "rgVarRefIdx", [], NDRIntField("", 0), size_is=lambda pkt: pkt.cVarRef
        ),
        NDRConfPacketListField(
            "rgVarRef",
            [],
            wireVARIANTStr,
            size_is=lambda pkt: pkt.cVarRef,
            ptr_pack=True,
        ),
    ]


class Invoke_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("pVarResult", wireVARIANTStr(), wireVARIANTStr)
        ),
        NDRPacketField("pExcepInfo", EXCEPINFO(), EXCEPINFO),
        NDRIntField("pArgErr", 0),
        NDRConfPacketListField(
            "rgVarRef",
            [],
            wireVARIANTStr,
            size_is=lambda pkt: pkt.cVarRef,
            ptr_pack=True,
        ),
        NDRIntField("status", 0),
    ]


IDISPATCH_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
}
register_com_interface(
    name="IDispatch",
    uuid=uuid.UUID("00020400-0000-0000-C000-000000000046"),
    opnums=IDISPATCH_OPNUMS,
)


class get_ICategoryCollection_Item_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class get_ICategoryCollection_Item_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_ICategoryCollection__NewEnum_Request(NDRPacket):
    fields_desc = []


class get_ICategoryCollection__NewEnum_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_ICategoryCollection_Count_Request(NDRPacket):
    fields_desc = []


class get_ICategoryCollection_Count_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


ICATEGORYCOLLECTION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_ICategoryCollection_Item_Request, get_ICategoryCollection_Item_Response
    ),
    8: DceRpcOp(
        get_ICategoryCollection__NewEnum_Request,
        get_ICategoryCollection__NewEnum_Response,
    ),
    9: DceRpcOp(
        get_ICategoryCollection_Count_Request, get_ICategoryCollection_Count_Response
    ),
}
register_com_interface(
    name="ICategoryCollection",
    uuid=uuid.UUID("3a56bfb8-576c-43f7-9335-fe4838fd7e37"),
    opnums=ICATEGORYCOLLECTION_OPNUMS,
)


class get_IUpdateCollection_Item_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class get_IUpdateCollection_Item_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class put_IUpdateCollection_Item_Request(NDRPacket):
    fields_desc = [
        NDRSignedIntField("index", 0),
        NDRPacketField("value", MInterfacePointer(), MInterfacePointer),
    ]


class put_IUpdateCollection_Item_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class get_IUpdateCollection__NewEnum_Request(NDRPacket):
    fields_desc = []


class get_IUpdateCollection__NewEnum_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateCollection_Count_Request(NDRPacket):
    fields_desc = []


class get_IUpdateCollection_Count_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateCollection_ReadOnly_Request(NDRPacket):
    fields_desc = []


class get_IUpdateCollection_ReadOnly_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class Add_Request(NDRPacket):
    fields_desc = [NDRPacketField("value", MInterfacePointer(), MInterfacePointer)]


class Add_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class Clear_Request(NDRPacket):
    fields_desc = []


class Clear_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class Insert_Request(NDRPacket):
    fields_desc = [
        NDRSignedIntField("index", 0),
        NDRPacketField("value", MInterfacePointer(), MInterfacePointer),
    ]


class Insert_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class RemoveAt_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class RemoveAt_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


IUPDATECOLLECTION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateCollection_Item_Request, get_IUpdateCollection_Item_Response
    ),
    8: DceRpcOp(
        put_IUpdateCollection_Item_Request, put_IUpdateCollection_Item_Response
    ),
    9: DceRpcOp(
        get_IUpdateCollection__NewEnum_Request, get_IUpdateCollection__NewEnum_Response
    ),
    10: DceRpcOp(
        get_IUpdateCollection_Count_Request, get_IUpdateCollection_Count_Response
    ),
    11: DceRpcOp(
        get_IUpdateCollection_ReadOnly_Request, get_IUpdateCollection_ReadOnly_Response
    ),
    12: DceRpcOp(Add_Request, Add_Response),
    13: DceRpcOp(Clear_Request, Clear_Response),
    # 14: Opnum15NotUsedOnWire,
    15: DceRpcOp(Insert_Request, Insert_Response),
    16: DceRpcOp(RemoveAt_Request, RemoveAt_Response),
}
register_com_interface(
    name="IUpdateCollection",
    uuid=uuid.UUID("07f7438c-7709-4ca5-b518-91279288134e"),
    opnums=IUPDATECOLLECTION_OPNUMS,
)


class get_IUpdate_Title_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_Title_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_AutoSelectOnWebSites_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_AutoSelectOnWebSites_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_BundledUpdates_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_BundledUpdates_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_CanRequireSource_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_CanRequireSource_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_Categories_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_Categories_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_Deadline_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_Deadline_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(NDRPacketField("retval", wireVARIANTStr(), wireVARIANTStr)),
        NDRIntField("status", 0),
    ]


class get_IUpdate_DeltaCompressedContentAvailable_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_DeltaCompressedContentAvailable_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_DeltaCompressedContentPreferred_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_DeltaCompressedContentPreferred_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_Description_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_Description_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_EulaAccepted_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_EulaAccepted_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_EulaText_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_EulaText_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_HandlerID_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_HandlerID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_Identity_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_Identity_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_Image_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_Image_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_InstallationBehavior_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_InstallationBehavior_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_IsBeta_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_IsBeta_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_IsDownloaded_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_IsDownloaded_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_IsHidden_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_IsHidden_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_IsInstalled_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_IsInstalled_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_IsMandatory_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_IsMandatory_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_IsUninstallable_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_IsUninstallable_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_Languages_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_Languages_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_LastDeploymentChangeTime_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_LastDeploymentChangeTime_Response(NDRPacket):
    fields_desc = [NDRIEEEDoubleField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_MaxDownloadSize_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_MaxDownloadSize_Response(NDRPacket):
    fields_desc = [
        NDRPacketField("retval", DECIMAL(), DECIMAL),
        NDRIntField("status", 0),
    ]


class get_IUpdate_MinDownloadSize_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_MinDownloadSize_Response(NDRPacket):
    fields_desc = [
        NDRPacketField("retval", DECIMAL(), DECIMAL),
        NDRIntField("status", 0),
    ]


class get_IUpdate_MoreInfoUrls_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_MoreInfoUrls_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_MsrcSeverity_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_MsrcSeverity_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_RecommendedCpuSpeed_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_RecommendedCpuSpeed_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_RecommendedHardDiskSpace_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_RecommendedHardDiskSpace_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_RecommendedMemory_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_RecommendedMemory_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate_ReleaseNotes_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_ReleaseNotes_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_SecurityBulletinIDs_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_SecurityBulletinIDs_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_SupersededUpdateIDs_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_SupersededUpdateIDs_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_SupportUrl_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_SupportUrl_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class UpdateType(IntEnum):
    utSoftware = 1
    utDriver = 2


class get_IUpdate_Type_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_Type_Response(NDRPacket):
    fields_desc = [NDRIntEnumField("retval", 0, UpdateType), NDRIntField("status", 0)]


class get_IUpdate_UninstallationNotes_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_UninstallationNotes_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_UninstallationBehavior_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_UninstallationBehavior_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_UninstallationSteps_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_UninstallationSteps_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdate_KBArticleIDs_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_KBArticleIDs_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class DeploymentAction(IntEnum):
    daNone = 0
    daInstallation = 1
    daUninstallation = 2
    daDetection = 3


class get_IUpdate_DeploymentAction_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_DeploymentAction_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, DeploymentAction),
        NDRIntField("status", 0),
    ]


class DownloadPriority(IntEnum):
    dpLow = 1
    dpNormal = 2
    dpHigh = 3
    dpExtraHigh = 4


class get_IUpdate_DownloadPriority_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_DownloadPriority_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, DownloadPriority),
        NDRIntField("status", 0),
    ]


class get_IUpdate_DownloadContents_Request(NDRPacket):
    fields_desc = []


class get_IUpdate_DownloadContents_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


IUPDATE_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
}
register_com_interface(
    name="IUpdate",
    uuid=uuid.UUID("6a92b07a-d821-4682-b423-5c805022cc4d"),
    opnums=IUPDATE_OPNUMS,
)


class get_IUpdateServiceManager_Services_Request(NDRPacket):
    fields_desc = []


class get_IUpdateServiceManager_Services_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class RegisterServiceWithAU_Request(NDRPacket):
    fields_desc = [NDRPacketField("serviceID", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class RegisterServiceWithAU_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class RemoveService_Request(NDRPacket):
    fields_desc = [NDRPacketField("serviceID", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class RemoveService_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class AddScanPackageService_Request(NDRPacket):
    fields_desc = [
        NDRPacketField("serviceName", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
        NDRPacketField("scanFileLocation", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
        NDRSignedIntField("flags", 0),
    ]


class AddScanPackageService_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("ppService", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class SetOption_Request(NDRPacket):
    fields_desc = [
        NDRPacketField("optionName", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
        NDRPacketField("optionValue", wireVARIANTStr(), wireVARIANTStr),
    ]


class SetOption_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


IUPDATESERVICEMANAGER_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateServiceManager_Services_Request,
        get_IUpdateServiceManager_Services_Response,
    ),
    # 8: Opnum9NotUsedOnWire,
    9: DceRpcOp(RegisterServiceWithAU_Request, RegisterServiceWithAU_Response),
    10: DceRpcOp(RemoveService_Request, RemoveService_Response),
    # 11: Opnum12NotUsedOnWire,
    12: DceRpcOp(AddScanPackageService_Request, AddScanPackageService_Response),
    13: DceRpcOp(SetOption_Request, SetOption_Response),
}
register_com_interface(
    name="IUpdateServiceManager",
    uuid=uuid.UUID("23857e3c-02ba-44a3-9423-b1c900805f37"),
    opnums=IUPDATESERVICEMANAGER_OPNUMS,
)


class get_IUpdateServiceManager2_ClientApplicationID_Request(NDRPacket):
    fields_desc = []


class get_IUpdateServiceManager2_ClientApplicationID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class put_IUpdateServiceManager2_ClientApplicationID_Request(NDRPacket):
    fields_desc = [NDRPacketField("value", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class put_IUpdateServiceManager2_ClientApplicationID_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class QueryServiceRegistration_Request(NDRPacket):
    fields_desc = [NDRPacketField("serviceID", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class QueryServiceRegistration_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class AddService2_Request(NDRPacket):
    fields_desc = [
        NDRPacketField("serviceID", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
        NDRSignedIntField("flags", 0),
        NDRPacketField("authorizationCabPath", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
    ]


class AddService2_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


IUPDATESERVICEMANAGER2_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateServiceManager_Services_Request,
        get_IUpdateServiceManager_Services_Response,
    ),
    # 8: Opnum9NotUsedOnWire,
    9: DceRpcOp(RegisterServiceWithAU_Request, RegisterServiceWithAU_Response),
    10: DceRpcOp(RemoveService_Request, RemoveService_Response),
    # 11: Opnum12NotUsedOnWire,
    12: DceRpcOp(AddScanPackageService_Request, AddScanPackageService_Response),
    13: DceRpcOp(SetOption_Request, SetOption_Response),
    14: DceRpcOp(
        get_IUpdateServiceManager2_ClientApplicationID_Request,
        get_IUpdateServiceManager2_ClientApplicationID_Response,
    ),
    15: DceRpcOp(
        put_IUpdateServiceManager2_ClientApplicationID_Request,
        put_IUpdateServiceManager2_ClientApplicationID_Response,
    ),
    16: DceRpcOp(QueryServiceRegistration_Request, QueryServiceRegistration_Response),
    17: DceRpcOp(AddService2_Request, AddService2_Response),
}
register_com_interface(
    name="IUpdateServiceManager2",
    uuid=uuid.UUID("0bb8531d-7e8d-424f-986c-a0b8f60a3e7b"),
    opnums=IUPDATESERVICEMANAGER2_OPNUMS,
)


class get_IStringCollection_Item_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class get_IStringCollection_Item_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class put_IStringCollection_Item_Request(NDRPacket):
    fields_desc = [
        NDRSignedIntField("index", 0),
        NDRPacketField("value", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
    ]


class put_IStringCollection_Item_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class get_IStringCollection__NewEnum_Request(NDRPacket):
    fields_desc = []


class get_IStringCollection__NewEnum_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IStringCollection_Count_Request(NDRPacket):
    fields_desc = []


class get_IStringCollection_Count_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IStringCollection_ReadOnly_Request(NDRPacket):
    fields_desc = []


class get_IStringCollection_ReadOnly_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class Add_Request(NDRPacket):
    fields_desc = [NDRPacketField("value", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class Add_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class Clear_Request(NDRPacket):
    fields_desc = []


class Clear_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class Copy_Request(NDRPacket):
    fields_desc = []


class Copy_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class Insert_Request(NDRPacket):
    fields_desc = [
        NDRSignedIntField("index", 0),
        NDRPacketField("value", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
    ]


class Insert_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class RemoveAt_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class RemoveAt_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


ISTRINGCOLLECTION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IStringCollection_Item_Request, get_IStringCollection_Item_Response
    ),
    8: DceRpcOp(
        put_IStringCollection_Item_Request, put_IStringCollection_Item_Response
    ),
    9: DceRpcOp(
        get_IStringCollection__NewEnum_Request, get_IStringCollection__NewEnum_Response
    ),
    10: DceRpcOp(
        get_IStringCollection_Count_Request, get_IStringCollection_Count_Response
    ),
    11: DceRpcOp(
        get_IStringCollection_ReadOnly_Request, get_IStringCollection_ReadOnly_Response
    ),
    12: DceRpcOp(Add_Request, Add_Response),
    13: DceRpcOp(Clear_Request, Clear_Response),
    14: DceRpcOp(Copy_Request, Copy_Response),
    15: DceRpcOp(Insert_Request, Insert_Response),
    16: DceRpcOp(RemoveAt_Request, RemoveAt_Response),
}
register_com_interface(
    name="IStringCollection",
    uuid=uuid.UUID("eff90582-2ddc-480f-a06d-60f3fbc362c3"),
    opnums=ISTRINGCOLLECTION_OPNUMS,
)


class GetInfo_Request(NDRPacket):
    fields_desc = [
        NDRPacketField("varInfoIdentifier", wireVARIANTStr(), wireVARIANTStr)
    ]


class GetInfo_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(NDRPacketField("retval", wireVARIANTStr(), wireVARIANTStr)),
        NDRIntField("status", 0),
    ]


IWINDOWSUPDATEAGENTINFO_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(GetInfo_Request, GetInfo_Response),
}
register_com_interface(
    name="IWindowsUpdateAgentInfo",
    uuid=uuid.UUID("85713fa1-7796-4fa2-be3b-e2d6124dd373"),
    opnums=IWINDOWSUPDATEAGENTINFO_OPNUMS,
)


class get_IAutomaticUpdatesResults_LastSearchSuccessDate_Request(NDRPacket):
    fields_desc = []


class get_IAutomaticUpdatesResults_LastSearchSuccessDate_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(NDRPacketField("retval", wireVARIANTStr(), wireVARIANTStr)),
        NDRIntField("status", 0),
    ]


class get_IAutomaticUpdatesResults_LastInstallationSuccessDate_Request(NDRPacket):
    fields_desc = []


class get_IAutomaticUpdatesResults_LastInstallationSuccessDate_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(NDRPacketField("retval", wireVARIANTStr(), wireVARIANTStr)),
        NDRIntField("status", 0),
    ]


IAUTOMATICUPDATESRESULTS_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IAutomaticUpdatesResults_LastSearchSuccessDate_Request,
        get_IAutomaticUpdatesResults_LastSearchSuccessDate_Response,
    ),
    8: DceRpcOp(
        get_IAutomaticUpdatesResults_LastInstallationSuccessDate_Request,
        get_IAutomaticUpdatesResults_LastInstallationSuccessDate_Response,
    ),
}
register_com_interface(
    name="IAutomaticUpdatesResults",
    uuid=uuid.UUID("E7A4D634-7942-4DD9-A111-82228BA33901"),
    opnums=IAUTOMATICUPDATESRESULTS_OPNUMS,
)


class DetectNow_Request(NDRPacket):
    fields_desc = []


class DetectNow_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


IAUTOMATICUPDATES_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(DetectNow_Request, DetectNow_Response),
    # 8: Opnum9NotUsedOnWire,
    # 9: Opnum10NotUsedOnWire,
    # 10: Opnum11NotUsedOnWire,
    # 11: Opnum12NotUsedOnWire,
    # 12: Opnum13NotUsedOnWire,
    # 13: Opnum14NotUsedOnWire
}
register_com_interface(
    name="IAutomaticUpdates",
    uuid=uuid.UUID("673425bf-c082-4c7c-bdfd-569464b8e0ce"),
    opnums=IAUTOMATICUPDATES_OPNUMS,
)


class get_IAutomaticUpdates2_Results_Request(NDRPacket):
    fields_desc = []


class get_IAutomaticUpdates2_Results_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


IAUTOMATICUPDATES2_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(DetectNow_Request, DetectNow_Response),
    # 8: Opnum9NotUsedOnWire,
    # 9: Opnum10NotUsedOnWire,
    # 10: Opnum11NotUsedOnWire,
    # 11: Opnum12NotUsedOnWire,
    # 12: Opnum13NotUsedOnWire,
    # 13: Opnum14NotUsedOnWire,
    14: DceRpcOp(
        get_IAutomaticUpdates2_Results_Request, get_IAutomaticUpdates2_Results_Response
    ),
}
register_com_interface(
    name="IAutomaticUpdates2",
    uuid=uuid.UUID("4A2F5C31-CFD9-410E-B7FB-29A653973A0F"),
    opnums=IAUTOMATICUPDATES2_OPNUMS,
)


class get_IUpdateIdentity_RevisionNumber_Request(NDRPacket):
    fields_desc = []


class get_IUpdateIdentity_RevisionNumber_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateIdentity_UpdateID_Request(NDRPacket):
    fields_desc = []


class get_IUpdateIdentity_UpdateID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


IUPDATEIDENTITY_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateIdentity_RevisionNumber_Request,
        get_IUpdateIdentity_RevisionNumber_Response,
    ),
    8: DceRpcOp(
        get_IUpdateIdentity_UpdateID_Request, get_IUpdateIdentity_UpdateID_Response
    ),
}
register_com_interface(
    name="IUpdateIdentity",
    uuid=uuid.UUID("46297823-9940-4c09-aed9-cd3ea6d05968"),
    opnums=IUPDATEIDENTITY_OPNUMS,
)


class get_IImageInformation_AltText_Request(NDRPacket):
    fields_desc = []


class get_IImageInformation_AltText_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IImageInformation_Height_Request(NDRPacket):
    fields_desc = []


class get_IImageInformation_Height_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IImageInformation_Source_Request(NDRPacket):
    fields_desc = []


class get_IImageInformation_Source_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IImageInformation_Width_Request(NDRPacket):
    fields_desc = []


class get_IImageInformation_Width_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


IIMAGEINFORMATION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IImageInformation_AltText_Request, get_IImageInformation_AltText_Response
    ),
    8: DceRpcOp(
        get_IImageInformation_Height_Request, get_IImageInformation_Height_Response
    ),
    9: DceRpcOp(
        get_IImageInformation_Source_Request, get_IImageInformation_Source_Response
    ),
    10: DceRpcOp(
        get_IImageInformation_Width_Request, get_IImageInformation_Width_Response
    ),
}
register_com_interface(
    name="IImageInformation",
    uuid=uuid.UUID("7c907864-346c-4aeb-8f3f-57da289f969f"),
    opnums=IIMAGEINFORMATION_OPNUMS,
)


class get_ICategory_Name_Request(NDRPacket):
    fields_desc = []


class get_ICategory_Name_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_ICategory_CategoryID_Request(NDRPacket):
    fields_desc = []


class get_ICategory_CategoryID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_ICategory_Children_Request(NDRPacket):
    fields_desc = []


class get_ICategory_Children_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_ICategory_Description_Request(NDRPacket):
    fields_desc = []


class get_ICategory_Description_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_ICategory_Image_Request(NDRPacket):
    fields_desc = []


class get_ICategory_Image_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_ICategory_Order_Request(NDRPacket):
    fields_desc = []


class get_ICategory_Order_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_ICategory_Parent_Request(NDRPacket):
    fields_desc = []


class get_ICategory_Parent_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_ICategory_Type_Request(NDRPacket):
    fields_desc = []


class get_ICategory_Type_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_ICategory_Updates_Request(NDRPacket):
    fields_desc = []


class get_ICategory_Updates_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


ICATEGORY_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_ICategory_Name_Request, get_ICategory_Name_Response),
    8: DceRpcOp(get_ICategory_CategoryID_Request, get_ICategory_CategoryID_Response),
    9: DceRpcOp(get_ICategory_Children_Request, get_ICategory_Children_Response),
    10: DceRpcOp(get_ICategory_Description_Request, get_ICategory_Description_Response),
    11: DceRpcOp(get_ICategory_Image_Request, get_ICategory_Image_Response),
    12: DceRpcOp(get_ICategory_Order_Request, get_ICategory_Order_Response),
    13: DceRpcOp(get_ICategory_Parent_Request, get_ICategory_Parent_Response),
    14: DceRpcOp(get_ICategory_Type_Request, get_ICategory_Type_Response),
    15: DceRpcOp(get_ICategory_Updates_Request, get_ICategory_Updates_Response),
}
register_com_interface(
    name="ICategory",
    uuid=uuid.UUID("81ddc1b8-9d35-47a6-b471-5b80f519223b"),
    opnums=ICATEGORY_OPNUMS,
)


class get_IInstallationBehavior_CanRequestUserInput_Request(NDRPacket):
    fields_desc = []


class get_IInstallationBehavior_CanRequestUserInput_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class InstallationImpact(IntEnum):
    iiNormal = 0
    iiMinor = 1
    iiRequiresExclusiveHandling = 2


class get_IInstallationBehavior_Impact_Request(NDRPacket):
    fields_desc = []


class get_IInstallationBehavior_Impact_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, InstallationImpact),
        NDRIntField("status", 0),
    ]


class InstallationRebootBehavior(IntEnum):
    irbNeverReboots = 0
    irbAlwaysRequiresReboot = 1
    irbCanRequestReboot = 2


class get_IInstallationBehavior_RebootBehavior_Request(NDRPacket):
    fields_desc = []


class get_IInstallationBehavior_RebootBehavior_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, InstallationRebootBehavior),
        NDRIntField("status", 0),
    ]


class get_IInstallationBehavior_RequiresNetworkConnectivity_Request(NDRPacket):
    fields_desc = []


class get_IInstallationBehavior_RequiresNetworkConnectivity_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


IINSTALLATIONBEHAVIOR_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IInstallationBehavior_CanRequestUserInput_Request,
        get_IInstallationBehavior_CanRequestUserInput_Response,
    ),
    8: DceRpcOp(
        get_IInstallationBehavior_Impact_Request,
        get_IInstallationBehavior_Impact_Response,
    ),
    9: DceRpcOp(
        get_IInstallationBehavior_RebootBehavior_Request,
        get_IInstallationBehavior_RebootBehavior_Response,
    ),
    10: DceRpcOp(
        get_IInstallationBehavior_RequiresNetworkConnectivity_Request,
        get_IInstallationBehavior_RequiresNetworkConnectivity_Response,
    ),
}
register_com_interface(
    name="IInstallationBehavior",
    uuid=uuid.UUID("d9a59339-e245-4dbd-9686-4d5763e39624"),
    opnums=IINSTALLATIONBEHAVIOR_OPNUMS,
)


class get_IUpdateDownloadContent_DownloadUrl_Request(NDRPacket):
    fields_desc = []


class get_IUpdateDownloadContent_DownloadUrl_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


IUPDATEDOWNLOADCONTENT_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateDownloadContent_DownloadUrl_Request,
        get_IUpdateDownloadContent_DownloadUrl_Response,
    ),
}
register_com_interface(
    name="IUpdateDownloadContent",
    uuid=uuid.UUID("54a2cb2d-9a0c-48b6-8a50-9abb69ee2d02"),
    opnums=IUPDATEDOWNLOADCONTENT_OPNUMS,
)


class get_IUpdateDownloadContent2_IsDeltaCompressedContent_Request(NDRPacket):
    fields_desc = []


class get_IUpdateDownloadContent2_IsDeltaCompressedContent_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


IUPDATEDOWNLOADCONTENT2_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateDownloadContent_DownloadUrl_Request,
        get_IUpdateDownloadContent_DownloadUrl_Response,
    ),
    8: DceRpcOp(
        get_IUpdateDownloadContent2_IsDeltaCompressedContent_Request,
        get_IUpdateDownloadContent2_IsDeltaCompressedContent_Response,
    ),
}
register_com_interface(
    name="IUpdateDownloadContent2",
    uuid=uuid.UUID("c97ad11b-f257-420b-9d9f-377f733f6f68"),
    opnums=IUPDATEDOWNLOADCONTENT2_OPNUMS,
)


class get_IUpdateDownloadContentCollection_Item_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class get_IUpdateDownloadContentCollection_Item_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateDownloadContentCollection__NewEnum_Request(NDRPacket):
    fields_desc = []


class get_IUpdateDownloadContentCollection__NewEnum_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateDownloadContentCollection_Count_Request(NDRPacket):
    fields_desc = []


class get_IUpdateDownloadContentCollection_Count_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


IUPDATEDOWNLOADCONTENTCOLLECTION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateDownloadContentCollection_Item_Request,
        get_IUpdateDownloadContentCollection_Item_Response,
    ),
    8: DceRpcOp(
        get_IUpdateDownloadContentCollection__NewEnum_Request,
        get_IUpdateDownloadContentCollection__NewEnum_Response,
    ),
    9: DceRpcOp(
        get_IUpdateDownloadContentCollection_Count_Request,
        get_IUpdateDownloadContentCollection_Count_Response,
    ),
}
register_com_interface(
    name="IUpdateDownloadContentCollection",
    uuid=uuid.UUID("bc5513c8-b3b8-4bf7-a4d4-361c0d8c88ba"),
    opnums=IUPDATEDOWNLOADCONTENTCOLLECTION_OPNUMS,
)


class get_IWindowsDriverUpdate_DriverClass_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate_DriverClass_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdate_DriverHardwareID_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate_DriverHardwareID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdate_DriverManufacturer_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate_DriverManufacturer_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdate_DriverModel_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate_DriverModel_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdate_DriverProvider_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate_DriverProvider_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdate_DriverVerDate_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate_DriverVerDate_Response(NDRPacket):
    fields_desc = [NDRIEEEDoubleField("retval", 0), NDRIntField("status", 0)]


class get_IWindowsDriverUpdate_DeviceProblemNumber_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate_DeviceProblemNumber_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IWindowsDriverUpdate_DeviceStatus_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate_DeviceStatus_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


IWINDOWSDRIVERUPDATE_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
    52: DceRpcOp(
        get_IWindowsDriverUpdate_DriverClass_Request,
        get_IWindowsDriverUpdate_DriverClass_Response,
    ),
    53: DceRpcOp(
        get_IWindowsDriverUpdate_DriverHardwareID_Request,
        get_IWindowsDriverUpdate_DriverHardwareID_Response,
    ),
    54: DceRpcOp(
        get_IWindowsDriverUpdate_DriverManufacturer_Request,
        get_IWindowsDriverUpdate_DriverManufacturer_Response,
    ),
    55: DceRpcOp(
        get_IWindowsDriverUpdate_DriverModel_Request,
        get_IWindowsDriverUpdate_DriverModel_Response,
    ),
    56: DceRpcOp(
        get_IWindowsDriverUpdate_DriverProvider_Request,
        get_IWindowsDriverUpdate_DriverProvider_Response,
    ),
    57: DceRpcOp(
        get_IWindowsDriverUpdate_DriverVerDate_Request,
        get_IWindowsDriverUpdate_DriverVerDate_Response,
    ),
    58: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceProblemNumber_Request,
        get_IWindowsDriverUpdate_DeviceProblemNumber_Response,
    ),
    59: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceStatus_Request,
        get_IWindowsDriverUpdate_DeviceStatus_Response,
    ),
}
register_com_interface(
    name="IWindowsDriverUpdate",
    uuid=uuid.UUID("b383cd1a-5ce9-4504-9f63-764b1236f191"),
    opnums=IWINDOWSDRIVERUPDATE_OPNUMS,
)


class get_IUpdate2_RebootRequired_Request(NDRPacket):
    fields_desc = []


class get_IUpdate2_RebootRequired_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate2_IsPresent_Request(NDRPacket):
    fields_desc = []


class get_IUpdate2_IsPresent_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdate2_CveIDs_Request(NDRPacket):
    fields_desc = []


class get_IUpdate2_CveIDs_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


IUPDATE2_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
    52: DceRpcOp(
        get_IUpdate2_RebootRequired_Request, get_IUpdate2_RebootRequired_Response
    ),
    53: DceRpcOp(get_IUpdate2_IsPresent_Request, get_IUpdate2_IsPresent_Response),
    54: DceRpcOp(get_IUpdate2_CveIDs_Request, get_IUpdate2_CveIDs_Response),
    # 55: Opnum56NotUsedOnWire
}
register_com_interface(
    name="IUpdate2",
    uuid=uuid.UUID("144fe9b0-d23d-4a8b-8634-fb4457533b7a"),
    opnums=IUPDATE2_OPNUMS,
)


class get_IUpdate3_BrowseOnly_Request(NDRPacket):
    fields_desc = []


class get_IUpdate3_BrowseOnly_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


IUPDATE3_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
    52: DceRpcOp(
        get_IUpdate2_RebootRequired_Request, get_IUpdate2_RebootRequired_Response
    ),
    53: DceRpcOp(get_IUpdate2_IsPresent_Request, get_IUpdate2_IsPresent_Response),
    54: DceRpcOp(get_IUpdate2_CveIDs_Request, get_IUpdate2_CveIDs_Response),
    # 55: Opnum56NotUsedOnWire,
    56: DceRpcOp(get_IUpdate3_BrowseOnly_Request, get_IUpdate3_BrowseOnly_Response),
}
register_com_interface(
    name="IUpdate3",
    uuid=uuid.UUID("112EDA6B-95B3-476F-9D90-AEE82C6B8181"),
    opnums=IUPDATE3_OPNUMS,
)


class get_IUpdate4_PerUser_Request(NDRPacket):
    fields_desc = []


class get_IUpdate4_PerUser_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


IUPDATE4_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
    52: DceRpcOp(
        get_IUpdate2_RebootRequired_Request, get_IUpdate2_RebootRequired_Response
    ),
    53: DceRpcOp(get_IUpdate2_IsPresent_Request, get_IUpdate2_IsPresent_Response),
    54: DceRpcOp(get_IUpdate2_CveIDs_Request, get_IUpdate2_CveIDs_Response),
    # 55: Opnum56NotUsedOnWire,
    56: DceRpcOp(get_IUpdate3_BrowseOnly_Request, get_IUpdate3_BrowseOnly_Response),
    57: DceRpcOp(get_IUpdate4_PerUser_Request, get_IUpdate4_PerUser_Response),
}
register_com_interface(
    name="IUpdate4",
    uuid=uuid.UUID("27e94b0d-5139-49a2-9a61-93522dc54652"),
    opnums=IUPDATE4_OPNUMS,
)


class AutoSelectionMode(IntEnum):
    asLetWindowsUpdateDecide = 0
    asAutoSelectIfDownloaded = 1
    asNeverAutoSelect = 2
    asAlwaysAutoSelect = 3


class get_IUpdate5_AutoSelection_Request(NDRPacket):
    fields_desc = []


class get_IUpdate5_AutoSelection_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, AutoSelectionMode),
        NDRIntField("status", 0),
    ]


class AutoDownloadMode(IntEnum):
    adLetWindowsUpdateDecide = 0
    adNeverAutoDownload = 1
    adAlwaysAutoDownload = 2


class get_IUpdate5_AutoDownload_Request(NDRPacket):
    fields_desc = []


class get_IUpdate5_AutoDownload_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, AutoDownloadMode),
        NDRIntField("status", 0),
    ]


IUPDATE5_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
    52: DceRpcOp(
        get_IUpdate2_RebootRequired_Request, get_IUpdate2_RebootRequired_Response
    ),
    53: DceRpcOp(get_IUpdate2_IsPresent_Request, get_IUpdate2_IsPresent_Response),
    54: DceRpcOp(get_IUpdate2_CveIDs_Request, get_IUpdate2_CveIDs_Response),
    # 55: Opnum56NotUsedOnWire,
    56: DceRpcOp(get_IUpdate3_BrowseOnly_Request, get_IUpdate3_BrowseOnly_Response),
    57: DceRpcOp(get_IUpdate4_PerUser_Request, get_IUpdate4_PerUser_Response),
    58: DceRpcOp(
        get_IUpdate5_AutoSelection_Request, get_IUpdate5_AutoSelection_Response
    ),
    59: DceRpcOp(get_IUpdate5_AutoDownload_Request, get_IUpdate5_AutoDownload_Response),
}
register_com_interface(
    name="IUpdate5",
    uuid=uuid.UUID("C1C2F21A-D2F4-4902-B5C6-8A081C19A890"),
    opnums=IUPDATE5_OPNUMS,
)


class get_IWindowsDriverUpdateEntry_DriverClass_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntry_DriverClass_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdateEntry_DriverHardwareID_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntry_DriverHardwareID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdateEntry_DriverManufacturer_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntry_DriverManufacturer_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdateEntry_DriverModel_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntry_DriverModel_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdateEntry_DriverProvider_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntry_DriverProvider_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdateEntry_DriverVerDate_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntry_DriverVerDate_Response(NDRPacket):
    fields_desc = [NDRIEEEDoubleField("retval", 0), NDRIntField("status", 0)]


class get_IWindowsDriverUpdateEntry_DeviceProblemNumber_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntry_DeviceProblemNumber_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IWindowsDriverUpdateEntry_DeviceStatus_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntry_DeviceStatus_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


IWINDOWSDRIVERUPDATEENTRY_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IWindowsDriverUpdateEntry_DriverClass_Request,
        get_IWindowsDriverUpdateEntry_DriverClass_Response,
    ),
    8: DceRpcOp(
        get_IWindowsDriverUpdateEntry_DriverHardwareID_Request,
        get_IWindowsDriverUpdateEntry_DriverHardwareID_Response,
    ),
    9: DceRpcOp(
        get_IWindowsDriverUpdateEntry_DriverManufacturer_Request,
        get_IWindowsDriverUpdateEntry_DriverManufacturer_Response,
    ),
    10: DceRpcOp(
        get_IWindowsDriverUpdateEntry_DriverModel_Request,
        get_IWindowsDriverUpdateEntry_DriverModel_Response,
    ),
    11: DceRpcOp(
        get_IWindowsDriverUpdateEntry_DriverProvider_Request,
        get_IWindowsDriverUpdateEntry_DriverProvider_Response,
    ),
    12: DceRpcOp(
        get_IWindowsDriverUpdateEntry_DriverVerDate_Request,
        get_IWindowsDriverUpdateEntry_DriverVerDate_Response,
    ),
    13: DceRpcOp(
        get_IWindowsDriverUpdateEntry_DeviceProblemNumber_Request,
        get_IWindowsDriverUpdateEntry_DeviceProblemNumber_Response,
    ),
    14: DceRpcOp(
        get_IWindowsDriverUpdateEntry_DeviceStatus_Request,
        get_IWindowsDriverUpdateEntry_DeviceStatus_Response,
    ),
}
register_com_interface(
    name="IWindowsDriverUpdateEntry",
    uuid=uuid.UUID("ED8BFE40-A60B-42ea-9652-817DFCFA23EC"),
    opnums=IWINDOWSDRIVERUPDATEENTRY_OPNUMS,
)


class get_IWindowsDriverUpdateEntryCollection_Item_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class get_IWindowsDriverUpdateEntryCollection_Item_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdateEntryCollection__NewEnum_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntryCollection__NewEnum_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdateEntryCollection_Count_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdateEntryCollection_Count_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


IWINDOWSDRIVERUPDATEENTRYCOLLECTION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IWindowsDriverUpdateEntryCollection_Item_Request,
        get_IWindowsDriverUpdateEntryCollection_Item_Response,
    ),
    8: DceRpcOp(
        get_IWindowsDriverUpdateEntryCollection__NewEnum_Request,
        get_IWindowsDriverUpdateEntryCollection__NewEnum_Response,
    ),
    9: DceRpcOp(
        get_IWindowsDriverUpdateEntryCollection_Count_Request,
        get_IWindowsDriverUpdateEntryCollection_Count_Response,
    ),
}
register_com_interface(
    name="IWindowsDriverUpdateEntryCollection",
    uuid=uuid.UUID("0D521700-A372-4bef-828B-3D00C10ADEBD"),
    opnums=IWINDOWSDRIVERUPDATEENTRYCOLLECTION_OPNUMS,
)


class get_IWindowsDriverUpdate2_RebootRequired_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate2_RebootRequired_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IWindowsDriverUpdate2_IsPresent_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate2_IsPresent_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IWindowsDriverUpdate2_CveIDs_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate2_CveIDs_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


IWINDOWSDRIVERUPDATE2_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
    52: DceRpcOp(
        get_IWindowsDriverUpdate_DriverClass_Request,
        get_IWindowsDriverUpdate_DriverClass_Response,
    ),
    53: DceRpcOp(
        get_IWindowsDriverUpdate_DriverHardwareID_Request,
        get_IWindowsDriverUpdate_DriverHardwareID_Response,
    ),
    54: DceRpcOp(
        get_IWindowsDriverUpdate_DriverManufacturer_Request,
        get_IWindowsDriverUpdate_DriverManufacturer_Response,
    ),
    55: DceRpcOp(
        get_IWindowsDriverUpdate_DriverModel_Request,
        get_IWindowsDriverUpdate_DriverModel_Response,
    ),
    56: DceRpcOp(
        get_IWindowsDriverUpdate_DriverProvider_Request,
        get_IWindowsDriverUpdate_DriverProvider_Response,
    ),
    57: DceRpcOp(
        get_IWindowsDriverUpdate_DriverVerDate_Request,
        get_IWindowsDriverUpdate_DriverVerDate_Response,
    ),
    58: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceProblemNumber_Request,
        get_IWindowsDriverUpdate_DeviceProblemNumber_Response,
    ),
    59: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceStatus_Request,
        get_IWindowsDriverUpdate_DeviceStatus_Response,
    ),
    60: DceRpcOp(
        get_IWindowsDriverUpdate2_RebootRequired_Request,
        get_IWindowsDriverUpdate2_RebootRequired_Response,
    ),
    61: DceRpcOp(
        get_IWindowsDriverUpdate2_IsPresent_Request,
        get_IWindowsDriverUpdate2_IsPresent_Response,
    ),
    62: DceRpcOp(
        get_IWindowsDriverUpdate2_CveIDs_Request,
        get_IWindowsDriverUpdate2_CveIDs_Response,
    ),
    # 63: Opnum64NotUsedOnWire
}
register_com_interface(
    name="IWindowsDriverUpdate2",
    uuid=uuid.UUID("615c4269-7a48-43bd-96b7-bf6ca27d6c3e"),
    opnums=IWINDOWSDRIVERUPDATE2_OPNUMS,
)


class get_IWindowsDriverUpdate3_BrowseOnly_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate3_BrowseOnly_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


IWINDOWSDRIVERUPDATE3_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
    52: DceRpcOp(
        get_IWindowsDriverUpdate_DriverClass_Request,
        get_IWindowsDriverUpdate_DriverClass_Response,
    ),
    53: DceRpcOp(
        get_IWindowsDriverUpdate_DriverHardwareID_Request,
        get_IWindowsDriverUpdate_DriverHardwareID_Response,
    ),
    54: DceRpcOp(
        get_IWindowsDriverUpdate_DriverManufacturer_Request,
        get_IWindowsDriverUpdate_DriverManufacturer_Response,
    ),
    55: DceRpcOp(
        get_IWindowsDriverUpdate_DriverModel_Request,
        get_IWindowsDriverUpdate_DriverModel_Response,
    ),
    56: DceRpcOp(
        get_IWindowsDriverUpdate_DriverProvider_Request,
        get_IWindowsDriverUpdate_DriverProvider_Response,
    ),
    57: DceRpcOp(
        get_IWindowsDriverUpdate_DriverVerDate_Request,
        get_IWindowsDriverUpdate_DriverVerDate_Response,
    ),
    58: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceProblemNumber_Request,
        get_IWindowsDriverUpdate_DeviceProblemNumber_Response,
    ),
    59: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceStatus_Request,
        get_IWindowsDriverUpdate_DeviceStatus_Response,
    ),
    60: DceRpcOp(
        get_IWindowsDriverUpdate2_RebootRequired_Request,
        get_IWindowsDriverUpdate2_RebootRequired_Response,
    ),
    61: DceRpcOp(
        get_IWindowsDriverUpdate2_IsPresent_Request,
        get_IWindowsDriverUpdate2_IsPresent_Response,
    ),
    62: DceRpcOp(
        get_IWindowsDriverUpdate2_CveIDs_Request,
        get_IWindowsDriverUpdate2_CveIDs_Response,
    ),
    # 63: Opnum64NotUsedOnWire,
    64: DceRpcOp(
        get_IWindowsDriverUpdate3_BrowseOnly_Request,
        get_IWindowsDriverUpdate3_BrowseOnly_Response,
    ),
}
register_com_interface(
    name="IWindowsDriverUpdate3",
    uuid=uuid.UUID("49EBD502-4A96-41BD-9E3E-4C5057F4250C"),
    opnums=IWINDOWSDRIVERUPDATE3_OPNUMS,
)


class get_IWindowsDriverUpdate4_WindowsDriverUpdateEntries_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate4_WindowsDriverUpdateEntries_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdate4_PerUser_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate4_PerUser_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


IWINDOWSDRIVERUPDATE4_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
    52: DceRpcOp(
        get_IWindowsDriverUpdate_DriverClass_Request,
        get_IWindowsDriverUpdate_DriverClass_Response,
    ),
    53: DceRpcOp(
        get_IWindowsDriverUpdate_DriverHardwareID_Request,
        get_IWindowsDriverUpdate_DriverHardwareID_Response,
    ),
    54: DceRpcOp(
        get_IWindowsDriverUpdate_DriverManufacturer_Request,
        get_IWindowsDriverUpdate_DriverManufacturer_Response,
    ),
    55: DceRpcOp(
        get_IWindowsDriverUpdate_DriverModel_Request,
        get_IWindowsDriverUpdate_DriverModel_Response,
    ),
    56: DceRpcOp(
        get_IWindowsDriverUpdate_DriverProvider_Request,
        get_IWindowsDriverUpdate_DriverProvider_Response,
    ),
    57: DceRpcOp(
        get_IWindowsDriverUpdate_DriverVerDate_Request,
        get_IWindowsDriverUpdate_DriverVerDate_Response,
    ),
    58: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceProblemNumber_Request,
        get_IWindowsDriverUpdate_DeviceProblemNumber_Response,
    ),
    59: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceStatus_Request,
        get_IWindowsDriverUpdate_DeviceStatus_Response,
    ),
    60: DceRpcOp(
        get_IWindowsDriverUpdate2_RebootRequired_Request,
        get_IWindowsDriverUpdate2_RebootRequired_Response,
    ),
    61: DceRpcOp(
        get_IWindowsDriverUpdate2_IsPresent_Request,
        get_IWindowsDriverUpdate2_IsPresent_Response,
    ),
    62: DceRpcOp(
        get_IWindowsDriverUpdate2_CveIDs_Request,
        get_IWindowsDriverUpdate2_CveIDs_Response,
    ),
    # 63: Opnum64NotUsedOnWire,
    64: DceRpcOp(
        get_IWindowsDriverUpdate3_BrowseOnly_Request,
        get_IWindowsDriverUpdate3_BrowseOnly_Response,
    ),
    65: DceRpcOp(
        get_IWindowsDriverUpdate4_WindowsDriverUpdateEntries_Request,
        get_IWindowsDriverUpdate4_WindowsDriverUpdateEntries_Response,
    ),
    66: DceRpcOp(
        get_IWindowsDriverUpdate4_PerUser_Request,
        get_IWindowsDriverUpdate4_PerUser_Response,
    ),
}
register_com_interface(
    name="IWindowsDriverUpdate4",
    uuid=uuid.UUID("004C6A2B-0C19-4c69-9F5C-A269B2560DB9"),
    opnums=IWINDOWSDRIVERUPDATE4_OPNUMS,
)


class get_IWindowsDriverUpdate5_AutoSelection_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate5_AutoSelection_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, AutoSelectionMode),
        NDRIntField("status", 0),
    ]


class get_IWindowsDriverUpdate5_AutoDownload_Request(NDRPacket):
    fields_desc = []


class get_IWindowsDriverUpdate5_AutoDownload_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, AutoDownloadMode),
        NDRIntField("status", 0),
    ]


IWINDOWSDRIVERUPDATE5_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdate_Title_Request, get_IUpdate_Title_Response),
    8: DceRpcOp(
        get_IUpdate_AutoSelectOnWebSites_Request,
        get_IUpdate_AutoSelectOnWebSites_Response,
    ),
    9: DceRpcOp(
        get_IUpdate_BundledUpdates_Request, get_IUpdate_BundledUpdates_Response
    ),
    10: DceRpcOp(
        get_IUpdate_CanRequireSource_Request, get_IUpdate_CanRequireSource_Response
    ),
    11: DceRpcOp(get_IUpdate_Categories_Request, get_IUpdate_Categories_Response),
    12: DceRpcOp(get_IUpdate_Deadline_Request, get_IUpdate_Deadline_Response),
    13: DceRpcOp(
        get_IUpdate_DeltaCompressedContentAvailable_Request,
        get_IUpdate_DeltaCompressedContentAvailable_Response,
    ),
    14: DceRpcOp(
        get_IUpdate_DeltaCompressedContentPreferred_Request,
        get_IUpdate_DeltaCompressedContentPreferred_Response,
    ),
    15: DceRpcOp(get_IUpdate_Description_Request, get_IUpdate_Description_Response),
    16: DceRpcOp(get_IUpdate_EulaAccepted_Request, get_IUpdate_EulaAccepted_Response),
    17: DceRpcOp(get_IUpdate_EulaText_Request, get_IUpdate_EulaText_Response),
    18: DceRpcOp(get_IUpdate_HandlerID_Request, get_IUpdate_HandlerID_Response),
    19: DceRpcOp(get_IUpdate_Identity_Request, get_IUpdate_Identity_Response),
    20: DceRpcOp(get_IUpdate_Image_Request, get_IUpdate_Image_Response),
    21: DceRpcOp(
        get_IUpdate_InstallationBehavior_Request,
        get_IUpdate_InstallationBehavior_Response,
    ),
    22: DceRpcOp(get_IUpdate_IsBeta_Request, get_IUpdate_IsBeta_Response),
    23: DceRpcOp(get_IUpdate_IsDownloaded_Request, get_IUpdate_IsDownloaded_Response),
    24: DceRpcOp(get_IUpdate_IsHidden_Request, get_IUpdate_IsHidden_Response),
    # 25: Opnum26NotUsedOnWire,
    26: DceRpcOp(get_IUpdate_IsInstalled_Request, get_IUpdate_IsInstalled_Response),
    27: DceRpcOp(get_IUpdate_IsMandatory_Request, get_IUpdate_IsMandatory_Response),
    28: DceRpcOp(
        get_IUpdate_IsUninstallable_Request, get_IUpdate_IsUninstallable_Response
    ),
    29: DceRpcOp(get_IUpdate_Languages_Request, get_IUpdate_Languages_Response),
    30: DceRpcOp(
        get_IUpdate_LastDeploymentChangeTime_Request,
        get_IUpdate_LastDeploymentChangeTime_Response,
    ),
    31: DceRpcOp(
        get_IUpdate_MaxDownloadSize_Request, get_IUpdate_MaxDownloadSize_Response
    ),
    32: DceRpcOp(
        get_IUpdate_MinDownloadSize_Request, get_IUpdate_MinDownloadSize_Response
    ),
    33: DceRpcOp(get_IUpdate_MoreInfoUrls_Request, get_IUpdate_MoreInfoUrls_Response),
    34: DceRpcOp(get_IUpdate_MsrcSeverity_Request, get_IUpdate_MsrcSeverity_Response),
    35: DceRpcOp(
        get_IUpdate_RecommendedCpuSpeed_Request,
        get_IUpdate_RecommendedCpuSpeed_Response,
    ),
    36: DceRpcOp(
        get_IUpdate_RecommendedHardDiskSpace_Request,
        get_IUpdate_RecommendedHardDiskSpace_Response,
    ),
    37: DceRpcOp(
        get_IUpdate_RecommendedMemory_Request, get_IUpdate_RecommendedMemory_Response
    ),
    38: DceRpcOp(get_IUpdate_ReleaseNotes_Request, get_IUpdate_ReleaseNotes_Response),
    39: DceRpcOp(
        get_IUpdate_SecurityBulletinIDs_Request,
        get_IUpdate_SecurityBulletinIDs_Response,
    ),
    40: DceRpcOp(
        get_IUpdate_SupersededUpdateIDs_Request,
        get_IUpdate_SupersededUpdateIDs_Response,
    ),
    41: DceRpcOp(get_IUpdate_SupportUrl_Request, get_IUpdate_SupportUrl_Response),
    42: DceRpcOp(get_IUpdate_Type_Request, get_IUpdate_Type_Response),
    43: DceRpcOp(
        get_IUpdate_UninstallationNotes_Request,
        get_IUpdate_UninstallationNotes_Response,
    ),
    44: DceRpcOp(
        get_IUpdate_UninstallationBehavior_Request,
        get_IUpdate_UninstallationBehavior_Response,
    ),
    45: DceRpcOp(
        get_IUpdate_UninstallationSteps_Request,
        get_IUpdate_UninstallationSteps_Response,
    ),
    46: DceRpcOp(get_IUpdate_KBArticleIDs_Request, get_IUpdate_KBArticleIDs_Response),
    # 47: Opnum48NotUsedOnWire,
    48: DceRpcOp(
        get_IUpdate_DeploymentAction_Request, get_IUpdate_DeploymentAction_Response
    ),
    # 49: Opnum50NotUsedOnWire,
    50: DceRpcOp(
        get_IUpdate_DownloadPriority_Request, get_IUpdate_DownloadPriority_Response
    ),
    51: DceRpcOp(
        get_IUpdate_DownloadContents_Request, get_IUpdate_DownloadContents_Response
    ),
    52: DceRpcOp(
        get_IWindowsDriverUpdate_DriverClass_Request,
        get_IWindowsDriverUpdate_DriverClass_Response,
    ),
    53: DceRpcOp(
        get_IWindowsDriverUpdate_DriverHardwareID_Request,
        get_IWindowsDriverUpdate_DriverHardwareID_Response,
    ),
    54: DceRpcOp(
        get_IWindowsDriverUpdate_DriverManufacturer_Request,
        get_IWindowsDriverUpdate_DriverManufacturer_Response,
    ),
    55: DceRpcOp(
        get_IWindowsDriverUpdate_DriverModel_Request,
        get_IWindowsDriverUpdate_DriverModel_Response,
    ),
    56: DceRpcOp(
        get_IWindowsDriverUpdate_DriverProvider_Request,
        get_IWindowsDriverUpdate_DriverProvider_Response,
    ),
    57: DceRpcOp(
        get_IWindowsDriverUpdate_DriverVerDate_Request,
        get_IWindowsDriverUpdate_DriverVerDate_Response,
    ),
    58: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceProblemNumber_Request,
        get_IWindowsDriverUpdate_DeviceProblemNumber_Response,
    ),
    59: DceRpcOp(
        get_IWindowsDriverUpdate_DeviceStatus_Request,
        get_IWindowsDriverUpdate_DeviceStatus_Response,
    ),
    60: DceRpcOp(
        get_IWindowsDriverUpdate2_RebootRequired_Request,
        get_IWindowsDriverUpdate2_RebootRequired_Response,
    ),
    61: DceRpcOp(
        get_IWindowsDriverUpdate2_IsPresent_Request,
        get_IWindowsDriverUpdate2_IsPresent_Response,
    ),
    62: DceRpcOp(
        get_IWindowsDriverUpdate2_CveIDs_Request,
        get_IWindowsDriverUpdate2_CveIDs_Response,
    ),
    # 63: Opnum64NotUsedOnWire,
    64: DceRpcOp(
        get_IWindowsDriverUpdate3_BrowseOnly_Request,
        get_IWindowsDriverUpdate3_BrowseOnly_Response,
    ),
    65: DceRpcOp(
        get_IWindowsDriverUpdate4_WindowsDriverUpdateEntries_Request,
        get_IWindowsDriverUpdate4_WindowsDriverUpdateEntries_Response,
    ),
    66: DceRpcOp(
        get_IWindowsDriverUpdate4_PerUser_Request,
        get_IWindowsDriverUpdate4_PerUser_Response,
    ),
    67: DceRpcOp(
        get_IWindowsDriverUpdate5_AutoSelection_Request,
        get_IWindowsDriverUpdate5_AutoSelection_Response,
    ),
    68: DceRpcOp(
        get_IWindowsDriverUpdate5_AutoDownload_Request,
        get_IWindowsDriverUpdate5_AutoDownload_Response,
    ),
}
register_com_interface(
    name="IWindowsDriverUpdate5",
    uuid=uuid.UUID("70CF5C82-8642-42bb-9DBC-0CFD263C6C4F"),
    opnums=IWINDOWSDRIVERUPDATE5_OPNUMS,
)


class get_IUpdateException_Message_Request(NDRPacket):
    fields_desc = []


class get_IUpdateException_Message_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateException_HResult_Request(NDRPacket):
    fields_desc = []


class get_IUpdateException_HResult_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class UpdateExceptionContext(IntEnum):
    uecGeneral = 1
    uecWindowsDriver = 2
    uecWindowsInstaller = 3


class get_IUpdateException_Context_Request(NDRPacket):
    fields_desc = []


class get_IUpdateException_Context_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, UpdateExceptionContext),
        NDRIntField("status", 0),
    ]


IUPDATEEXCEPTION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateException_Message_Request, get_IUpdateException_Message_Response
    ),
    8: DceRpcOp(
        get_IUpdateException_HResult_Request, get_IUpdateException_HResult_Response
    ),
    9: DceRpcOp(
        get_IUpdateException_Context_Request, get_IUpdateException_Context_Response
    ),
}
register_com_interface(
    name="IUpdateException",
    uuid=uuid.UUID("a376dd5e-09d4-427f-af7c-fed5b6e1c1d6"),
    opnums=IUPDATEEXCEPTION_OPNUMS,
)


class get_IUpdateExceptionCollection_Item_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class get_IUpdateExceptionCollection_Item_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateExceptionCollection__NewEnum_Request(NDRPacket):
    fields_desc = []


class get_IUpdateExceptionCollection__NewEnum_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateExceptionCollection_Count_Request(NDRPacket):
    fields_desc = []


class get_IUpdateExceptionCollection_Count_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


IUPDATEEXCEPTIONCOLLECTION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateExceptionCollection_Item_Request,
        get_IUpdateExceptionCollection_Item_Response,
    ),
    8: DceRpcOp(
        get_IUpdateExceptionCollection__NewEnum_Request,
        get_IUpdateExceptionCollection__NewEnum_Response,
    ),
    9: DceRpcOp(
        get_IUpdateExceptionCollection_Count_Request,
        get_IUpdateExceptionCollection_Count_Response,
    ),
}
register_com_interface(
    name="IUpdateExceptionCollection",
    uuid=uuid.UUID("503626a3-8e14-4729-9355-0fe664bd2321"),
    opnums=IUPDATEEXCEPTIONCOLLECTION_OPNUMS,
)


class OperationResultCode(IntEnum):
    orcNotStarted = 0
    orcInProgress = 1
    orcSucceeded = 2
    orcSucceededWithErrors = 3
    orcFailed = 4
    orcAborted = 5


class get_ISearchResult_ResultCode_Request(NDRPacket):
    fields_desc = []


class get_ISearchResult_ResultCode_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, OperationResultCode),
        NDRIntField("status", 0),
    ]


class get_ISearchResult_RootCategories_Request(NDRPacket):
    fields_desc = []


class get_ISearchResult_RootCategories_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_ISearchResult_Updates_Request(NDRPacket):
    fields_desc = []


class get_ISearchResult_Updates_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_ISearchResult_Warnings_Request(NDRPacket):
    fields_desc = []


class get_ISearchResult_Warnings_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


ISEARCHRESULT_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_ISearchResult_ResultCode_Request, get_ISearchResult_ResultCode_Response
    ),
    8: DceRpcOp(
        get_ISearchResult_RootCategories_Request,
        get_ISearchResult_RootCategories_Response,
    ),
    9: DceRpcOp(get_ISearchResult_Updates_Request, get_ISearchResult_Updates_Response),
    10: DceRpcOp(
        get_ISearchResult_Warnings_Request, get_ISearchResult_Warnings_Response
    ),
}
register_com_interface(
    name="ISearchResult",
    uuid=uuid.UUID("d40cff62-e08c-4498-941a-01e25f0fd33c"),
    opnums=ISEARCHRESULT_OPNUMS,
)


class UpdateOperation(IntEnum):
    uoInstallation = 1
    uoUninstallation = 2


class get_IUpdateHistoryEntry_Operation_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_Operation_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, UpdateOperation),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntry_ResultCode_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_ResultCode_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, OperationResultCode),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntry_HResult_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_HResult_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateHistoryEntry_Date_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_Date_Response(NDRPacket):
    fields_desc = [NDRIEEEDoubleField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateHistoryEntry_UpdateIdentity_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_UpdateIdentity_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntry_Title_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_Title_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntry_Description_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_Description_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntry_UnmappedResultCode_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_UnmappedResultCode_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateHistoryEntry_ClientApplicationID_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_ClientApplicationID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class ServerSelection(IntEnum):
    ssDefault = 0
    ssManagedServer = 1
    ssWindowsUpdate = 2
    ssOthers = 3


class get_IUpdateHistoryEntry_ServerSelection_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_ServerSelection_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, ServerSelection),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntry_ServiceID_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_ServiceID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntry_UninstallationSteps_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_UninstallationSteps_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntry_UninstallationNotes_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_UninstallationNotes_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntry_SupportUrl_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry_SupportUrl_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


IUPDATEHISTORYENTRY_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateHistoryEntry_Operation_Request,
        get_IUpdateHistoryEntry_Operation_Response,
    ),
    8: DceRpcOp(
        get_IUpdateHistoryEntry_ResultCode_Request,
        get_IUpdateHistoryEntry_ResultCode_Response,
    ),
    9: DceRpcOp(
        get_IUpdateHistoryEntry_HResult_Request,
        get_IUpdateHistoryEntry_HResult_Response,
    ),
    10: DceRpcOp(
        get_IUpdateHistoryEntry_Date_Request, get_IUpdateHistoryEntry_Date_Response
    ),
    11: DceRpcOp(
        get_IUpdateHistoryEntry_UpdateIdentity_Request,
        get_IUpdateHistoryEntry_UpdateIdentity_Response,
    ),
    12: DceRpcOp(
        get_IUpdateHistoryEntry_Title_Request, get_IUpdateHistoryEntry_Title_Response
    ),
    13: DceRpcOp(
        get_IUpdateHistoryEntry_Description_Request,
        get_IUpdateHistoryEntry_Description_Response,
    ),
    14: DceRpcOp(
        get_IUpdateHistoryEntry_UnmappedResultCode_Request,
        get_IUpdateHistoryEntry_UnmappedResultCode_Response,
    ),
    15: DceRpcOp(
        get_IUpdateHistoryEntry_ClientApplicationID_Request,
        get_IUpdateHistoryEntry_ClientApplicationID_Response,
    ),
    16: DceRpcOp(
        get_IUpdateHistoryEntry_ServerSelection_Request,
        get_IUpdateHistoryEntry_ServerSelection_Response,
    ),
    17: DceRpcOp(
        get_IUpdateHistoryEntry_ServiceID_Request,
        get_IUpdateHistoryEntry_ServiceID_Response,
    ),
    18: DceRpcOp(
        get_IUpdateHistoryEntry_UninstallationSteps_Request,
        get_IUpdateHistoryEntry_UninstallationSteps_Response,
    ),
    19: DceRpcOp(
        get_IUpdateHistoryEntry_UninstallationNotes_Request,
        get_IUpdateHistoryEntry_UninstallationNotes_Response,
    ),
    20: DceRpcOp(
        get_IUpdateHistoryEntry_SupportUrl_Request,
        get_IUpdateHistoryEntry_SupportUrl_Response,
    ),
}
register_com_interface(
    name="IUpdateHistoryEntry",
    uuid=uuid.UUID("be56a644-af0e-4e0e-a311-c1d8e695cbff"),
    opnums=IUPDATEHISTORYENTRY_OPNUMS,
)


class get_IUpdateHistoryEntry2_Categories_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntry2_Categories_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


IUPDATEHISTORYENTRY2_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateHistoryEntry_Operation_Request,
        get_IUpdateHistoryEntry_Operation_Response,
    ),
    8: DceRpcOp(
        get_IUpdateHistoryEntry_ResultCode_Request,
        get_IUpdateHistoryEntry_ResultCode_Response,
    ),
    9: DceRpcOp(
        get_IUpdateHistoryEntry_HResult_Request,
        get_IUpdateHistoryEntry_HResult_Response,
    ),
    10: DceRpcOp(
        get_IUpdateHistoryEntry_Date_Request, get_IUpdateHistoryEntry_Date_Response
    ),
    11: DceRpcOp(
        get_IUpdateHistoryEntry_UpdateIdentity_Request,
        get_IUpdateHistoryEntry_UpdateIdentity_Response,
    ),
    12: DceRpcOp(
        get_IUpdateHistoryEntry_Title_Request, get_IUpdateHistoryEntry_Title_Response
    ),
    13: DceRpcOp(
        get_IUpdateHistoryEntry_Description_Request,
        get_IUpdateHistoryEntry_Description_Response,
    ),
    14: DceRpcOp(
        get_IUpdateHistoryEntry_UnmappedResultCode_Request,
        get_IUpdateHistoryEntry_UnmappedResultCode_Response,
    ),
    15: DceRpcOp(
        get_IUpdateHistoryEntry_ClientApplicationID_Request,
        get_IUpdateHistoryEntry_ClientApplicationID_Response,
    ),
    16: DceRpcOp(
        get_IUpdateHistoryEntry_ServerSelection_Request,
        get_IUpdateHistoryEntry_ServerSelection_Response,
    ),
    17: DceRpcOp(
        get_IUpdateHistoryEntry_ServiceID_Request,
        get_IUpdateHistoryEntry_ServiceID_Response,
    ),
    18: DceRpcOp(
        get_IUpdateHistoryEntry_UninstallationSteps_Request,
        get_IUpdateHistoryEntry_UninstallationSteps_Response,
    ),
    19: DceRpcOp(
        get_IUpdateHistoryEntry_UninstallationNotes_Request,
        get_IUpdateHistoryEntry_UninstallationNotes_Response,
    ),
    20: DceRpcOp(
        get_IUpdateHistoryEntry_SupportUrl_Request,
        get_IUpdateHistoryEntry_SupportUrl_Response,
    ),
    21: DceRpcOp(
        get_IUpdateHistoryEntry2_Categories_Request,
        get_IUpdateHistoryEntry2_Categories_Response,
    ),
}
register_com_interface(
    name="IUpdateHistoryEntry2",
    uuid=uuid.UUID("c2bfb780-4539-4132-ab8c-0a8772013ab6"),
    opnums=IUPDATEHISTORYENTRY2_OPNUMS,
)


class get_IUpdateHistoryEntryCollection_Item_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class get_IUpdateHistoryEntryCollection_Item_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntryCollection__NewEnum_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntryCollection__NewEnum_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateHistoryEntryCollection_Count_Request(NDRPacket):
    fields_desc = []


class get_IUpdateHistoryEntryCollection_Count_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


IUPDATEHISTORYENTRYCOLLECTION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateHistoryEntryCollection_Item_Request,
        get_IUpdateHistoryEntryCollection_Item_Response,
    ),
    8: DceRpcOp(
        get_IUpdateHistoryEntryCollection__NewEnum_Request,
        get_IUpdateHistoryEntryCollection__NewEnum_Response,
    ),
    9: DceRpcOp(
        get_IUpdateHistoryEntryCollection_Count_Request,
        get_IUpdateHistoryEntryCollection_Count_Response,
    ),
}
register_com_interface(
    name="IUpdateHistoryEntryCollection",
    uuid=uuid.UUID("a7f04f3c-a290-435b-aadf-a116c3357a5c"),
    opnums=IUPDATEHISTORYENTRYCOLLECTION_OPNUMS,
)


class get_IUpdateSearcher_CanAutomaticallyUpgradeService_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSearcher_CanAutomaticallyUpgradeService_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class put_IUpdateSearcher_CanAutomaticallyUpgradeService_Request(NDRPacket):
    fields_desc = [NDRSignedShortField("value", 0)]


class put_IUpdateSearcher_CanAutomaticallyUpgradeService_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class get_IUpdateSearcher_ClientApplicationID_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSearcher_ClientApplicationID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class put_IUpdateSearcher_ClientApplicationID_Request(NDRPacket):
    fields_desc = [NDRPacketField("value", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class put_IUpdateSearcher_ClientApplicationID_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class get_IUpdateSearcher_IncludePotentiallySupersededUpdates_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSearcher_IncludePotentiallySupersededUpdates_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class put_IUpdateSearcher_IncludePotentiallySupersededUpdates_Request(NDRPacket):
    fields_desc = [NDRSignedShortField("value", 0)]


class put_IUpdateSearcher_IncludePotentiallySupersededUpdates_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class get_IUpdateSearcher_ServerSelection_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSearcher_ServerSelection_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, ServerSelection),
        NDRIntField("status", 0),
    ]


class put_IUpdateSearcher_ServerSelection_Request(NDRPacket):
    fields_desc = [NDRIntEnumField("value", 0, ServerSelection)]


class put_IUpdateSearcher_ServerSelection_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class EscapeString_Request(NDRPacket):
    fields_desc = [NDRPacketField("unescaped", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class EscapeString_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class QueryHistory_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("startIndex", 0), NDRSignedIntField("count", 0)]


class QueryHistory_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class Search_Request(NDRPacket):
    fields_desc = [NDRPacketField("criteria", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class Search_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateSearcher_Online_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSearcher_Online_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class put_IUpdateSearcher_Online_Request(NDRPacket):
    fields_desc = [NDRSignedShortField("value", 0)]


class put_IUpdateSearcher_Online_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class GetTotalHistoryCount_Request(NDRPacket):
    fields_desc = []


class GetTotalHistoryCount_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateSearcher_ServiceID_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSearcher_ServiceID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class put_IUpdateSearcher_ServiceID_Request(NDRPacket):
    fields_desc = [NDRPacketField("value", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class put_IUpdateSearcher_ServiceID_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


IUPDATESEARCHER_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateSearcher_CanAutomaticallyUpgradeService_Request,
        get_IUpdateSearcher_CanAutomaticallyUpgradeService_Response,
    ),
    8: DceRpcOp(
        put_IUpdateSearcher_CanAutomaticallyUpgradeService_Request,
        put_IUpdateSearcher_CanAutomaticallyUpgradeService_Response,
    ),
    9: DceRpcOp(
        get_IUpdateSearcher_ClientApplicationID_Request,
        get_IUpdateSearcher_ClientApplicationID_Response,
    ),
    10: DceRpcOp(
        put_IUpdateSearcher_ClientApplicationID_Request,
        put_IUpdateSearcher_ClientApplicationID_Response,
    ),
    11: DceRpcOp(
        get_IUpdateSearcher_IncludePotentiallySupersededUpdates_Request,
        get_IUpdateSearcher_IncludePotentiallySupersededUpdates_Response,
    ),
    12: DceRpcOp(
        put_IUpdateSearcher_IncludePotentiallySupersededUpdates_Request,
        put_IUpdateSearcher_IncludePotentiallySupersededUpdates_Response,
    ),
    13: DceRpcOp(
        get_IUpdateSearcher_ServerSelection_Request,
        get_IUpdateSearcher_ServerSelection_Response,
    ),
    14: DceRpcOp(
        put_IUpdateSearcher_ServerSelection_Request,
        put_IUpdateSearcher_ServerSelection_Response,
    ),
    # 15: Opnum16NotUsedOnWire,
    # 16: Opnum17NotUsedOnWire,
    17: DceRpcOp(EscapeString_Request, EscapeString_Response),
    18: DceRpcOp(QueryHistory_Request, QueryHistory_Response),
    19: DceRpcOp(Search_Request, Search_Response),
    20: DceRpcOp(
        get_IUpdateSearcher_Online_Request, get_IUpdateSearcher_Online_Response
    ),
    21: DceRpcOp(
        put_IUpdateSearcher_Online_Request, put_IUpdateSearcher_Online_Response
    ),
    22: DceRpcOp(GetTotalHistoryCount_Request, GetTotalHistoryCount_Response),
    23: DceRpcOp(
        get_IUpdateSearcher_ServiceID_Request, get_IUpdateSearcher_ServiceID_Response
    ),
    24: DceRpcOp(
        put_IUpdateSearcher_ServiceID_Request, put_IUpdateSearcher_ServiceID_Response
    ),
}
register_com_interface(
    name="IUpdateSearcher",
    uuid=uuid.UUID("8f45abf1-f9ae-4b95-a933-f0f66e5056ea"),
    opnums=IUPDATESEARCHER_OPNUMS,
)


class get_IUpdateSearcher2_IgnoreDownloadPriority_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSearcher2_IgnoreDownloadPriority_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class put_IUpdateSearcher2_IgnoreDownloadPriority_Request(NDRPacket):
    fields_desc = [NDRSignedShortField("value", 0)]


class put_IUpdateSearcher2_IgnoreDownloadPriority_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


IUPDATESEARCHER2_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateSearcher_CanAutomaticallyUpgradeService_Request,
        get_IUpdateSearcher_CanAutomaticallyUpgradeService_Response,
    ),
    8: DceRpcOp(
        put_IUpdateSearcher_CanAutomaticallyUpgradeService_Request,
        put_IUpdateSearcher_CanAutomaticallyUpgradeService_Response,
    ),
    9: DceRpcOp(
        get_IUpdateSearcher_ClientApplicationID_Request,
        get_IUpdateSearcher_ClientApplicationID_Response,
    ),
    10: DceRpcOp(
        put_IUpdateSearcher_ClientApplicationID_Request,
        put_IUpdateSearcher_ClientApplicationID_Response,
    ),
    11: DceRpcOp(
        get_IUpdateSearcher_IncludePotentiallySupersededUpdates_Request,
        get_IUpdateSearcher_IncludePotentiallySupersededUpdates_Response,
    ),
    12: DceRpcOp(
        put_IUpdateSearcher_IncludePotentiallySupersededUpdates_Request,
        put_IUpdateSearcher_IncludePotentiallySupersededUpdates_Response,
    ),
    13: DceRpcOp(
        get_IUpdateSearcher_ServerSelection_Request,
        get_IUpdateSearcher_ServerSelection_Response,
    ),
    14: DceRpcOp(
        put_IUpdateSearcher_ServerSelection_Request,
        put_IUpdateSearcher_ServerSelection_Response,
    ),
    # 15: Opnum16NotUsedOnWire,
    # 16: Opnum17NotUsedOnWire,
    17: DceRpcOp(EscapeString_Request, EscapeString_Response),
    18: DceRpcOp(QueryHistory_Request, QueryHistory_Response),
    19: DceRpcOp(Search_Request, Search_Response),
    20: DceRpcOp(
        get_IUpdateSearcher_Online_Request, get_IUpdateSearcher_Online_Response
    ),
    21: DceRpcOp(
        put_IUpdateSearcher_Online_Request, put_IUpdateSearcher_Online_Response
    ),
    22: DceRpcOp(GetTotalHistoryCount_Request, GetTotalHistoryCount_Response),
    23: DceRpcOp(
        get_IUpdateSearcher_ServiceID_Request, get_IUpdateSearcher_ServiceID_Response
    ),
    24: DceRpcOp(
        put_IUpdateSearcher_ServiceID_Request, put_IUpdateSearcher_ServiceID_Response
    ),
    25: DceRpcOp(
        get_IUpdateSearcher2_IgnoreDownloadPriority_Request,
        get_IUpdateSearcher2_IgnoreDownloadPriority_Response,
    ),
    26: DceRpcOp(
        put_IUpdateSearcher2_IgnoreDownloadPriority_Request,
        put_IUpdateSearcher2_IgnoreDownloadPriority_Response,
    ),
}
register_com_interface(
    name="IUpdateSearcher2",
    uuid=uuid.UUID("4cbdcb2d-1589-4beb-bd1c-3e582ff0add0"),
    opnums=IUPDATESEARCHER2_OPNUMS,
)


class SearchScope(IntEnum):
    searchScopeDefault = 0
    searchScopeMachineOnly = 1
    searchScopeCurrentUserOnly = 2
    searchScopeMachineAndCurrentUser = 3
    searchScopeMachineAndAllUsers = 4
    searchScopeAllUsers = 5


class get_IUpdateSearcher3_SearchScope_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSearcher3_SearchScope_Response(NDRPacket):
    fields_desc = [NDRIntEnumField("retval", 0, SearchScope), NDRIntField("status", 0)]


class put_IUpdateSearcher3_SearchScope_Request(NDRPacket):
    fields_desc = [NDRIntEnumField("value", 0, SearchScope)]


class put_IUpdateSearcher3_SearchScope_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


IUPDATESEARCHER3_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateSearcher_CanAutomaticallyUpgradeService_Request,
        get_IUpdateSearcher_CanAutomaticallyUpgradeService_Response,
    ),
    8: DceRpcOp(
        put_IUpdateSearcher_CanAutomaticallyUpgradeService_Request,
        put_IUpdateSearcher_CanAutomaticallyUpgradeService_Response,
    ),
    9: DceRpcOp(
        get_IUpdateSearcher_ClientApplicationID_Request,
        get_IUpdateSearcher_ClientApplicationID_Response,
    ),
    10: DceRpcOp(
        put_IUpdateSearcher_ClientApplicationID_Request,
        put_IUpdateSearcher_ClientApplicationID_Response,
    ),
    11: DceRpcOp(
        get_IUpdateSearcher_IncludePotentiallySupersededUpdates_Request,
        get_IUpdateSearcher_IncludePotentiallySupersededUpdates_Response,
    ),
    12: DceRpcOp(
        put_IUpdateSearcher_IncludePotentiallySupersededUpdates_Request,
        put_IUpdateSearcher_IncludePotentiallySupersededUpdates_Response,
    ),
    13: DceRpcOp(
        get_IUpdateSearcher_ServerSelection_Request,
        get_IUpdateSearcher_ServerSelection_Response,
    ),
    14: DceRpcOp(
        put_IUpdateSearcher_ServerSelection_Request,
        put_IUpdateSearcher_ServerSelection_Response,
    ),
    # 15: Opnum16NotUsedOnWire,
    # 16: Opnum17NotUsedOnWire,
    17: DceRpcOp(EscapeString_Request, EscapeString_Response),
    18: DceRpcOp(QueryHistory_Request, QueryHistory_Response),
    19: DceRpcOp(Search_Request, Search_Response),
    20: DceRpcOp(
        get_IUpdateSearcher_Online_Request, get_IUpdateSearcher_Online_Response
    ),
    21: DceRpcOp(
        put_IUpdateSearcher_Online_Request, put_IUpdateSearcher_Online_Response
    ),
    22: DceRpcOp(GetTotalHistoryCount_Request, GetTotalHistoryCount_Response),
    23: DceRpcOp(
        get_IUpdateSearcher_ServiceID_Request, get_IUpdateSearcher_ServiceID_Response
    ),
    24: DceRpcOp(
        put_IUpdateSearcher_ServiceID_Request, put_IUpdateSearcher_ServiceID_Response
    ),
    25: DceRpcOp(
        get_IUpdateSearcher2_IgnoreDownloadPriority_Request,
        get_IUpdateSearcher2_IgnoreDownloadPriority_Response,
    ),
    26: DceRpcOp(
        put_IUpdateSearcher2_IgnoreDownloadPriority_Request,
        put_IUpdateSearcher2_IgnoreDownloadPriority_Response,
    ),
    27: DceRpcOp(
        get_IUpdateSearcher3_SearchScope_Request,
        get_IUpdateSearcher3_SearchScope_Response,
    ),
    28: DceRpcOp(
        put_IUpdateSearcher3_SearchScope_Request,
        put_IUpdateSearcher3_SearchScope_Response,
    ),
}
register_com_interface(
    name="IUpdateSearcher3",
    uuid=uuid.UUID("04C6895D-EAF2-4034-97F3-311DE9BE413A"),
    opnums=IUPDATESEARCHER3_OPNUMS,
)


class get_IUpdateSession_ClientApplicationID_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSession_ClientApplicationID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class put_IUpdateSession_ClientApplicationID_Request(NDRPacket):
    fields_desc = [NDRPacketField("value", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)]


class put_IUpdateSession_ClientApplicationID_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


class get_IUpdateSession_ReadOnly_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSession_ReadOnly_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class CreateUpdateSearcher_Request(NDRPacket):
    fields_desc = []


class CreateUpdateSearcher_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


IUPDATESESSION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateSession_ClientApplicationID_Request,
        get_IUpdateSession_ClientApplicationID_Response,
    ),
    8: DceRpcOp(
        put_IUpdateSession_ClientApplicationID_Request,
        put_IUpdateSession_ClientApplicationID_Response,
    ),
    9: DceRpcOp(
        get_IUpdateSession_ReadOnly_Request, get_IUpdateSession_ReadOnly_Response
    ),
    # 10: Opnum11NotUsedOnWire,
    # 11: Opnum12NotUsedOnWire,
    12: DceRpcOp(CreateUpdateSearcher_Request, CreateUpdateSearcher_Response),
    # 13: Opnum14NotUsedOnWire,
    # 14: Opnum15NotUsedOnWire
}
register_com_interface(
    name="IUpdateSession",
    uuid=uuid.UUID("816858a4-260d-4260-933a-2585f1abc76b"),
    opnums=IUPDATESESSION_OPNUMS,
)


class get_IUpdateSession2_UserLocale_Request(NDRPacket):
    fields_desc = []


class get_IUpdateSession2_UserLocale_Response(NDRPacket):
    fields_desc = [NDRIntField("retval", 0), NDRIntField("status", 0)]


class put_IUpdateSession2_UserLocale_Request(NDRPacket):
    fields_desc = [NDRIntField("lcid", 0)]


class put_IUpdateSession2_UserLocale_Response(NDRPacket):
    fields_desc = [NDRIntField("status", 0)]


IUPDATESESSION2_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateSession_ClientApplicationID_Request,
        get_IUpdateSession_ClientApplicationID_Response,
    ),
    8: DceRpcOp(
        put_IUpdateSession_ClientApplicationID_Request,
        put_IUpdateSession_ClientApplicationID_Response,
    ),
    9: DceRpcOp(
        get_IUpdateSession_ReadOnly_Request, get_IUpdateSession_ReadOnly_Response
    ),
    # 10: Opnum11NotUsedOnWire,
    # 11: Opnum12NotUsedOnWire,
    12: DceRpcOp(CreateUpdateSearcher_Request, CreateUpdateSearcher_Response),
    # 13: Opnum14NotUsedOnWire,
    # 14: Opnum15NotUsedOnWire,
    15: DceRpcOp(
        get_IUpdateSession2_UserLocale_Request, get_IUpdateSession2_UserLocale_Response
    ),
    16: DceRpcOp(
        put_IUpdateSession2_UserLocale_Request, put_IUpdateSession2_UserLocale_Response
    ),
}
register_com_interface(
    name="IUpdateSession2",
    uuid=uuid.UUID("91caf7b0-eb23-49ed-9937-c52d817f46f7"),
    opnums=IUPDATESESSION2_OPNUMS,
)


class CreateUpdateServiceManager_Request(NDRPacket):
    fields_desc = []


class CreateUpdateServiceManager_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class QueryHistory_Request(NDRPacket):
    fields_desc = [
        NDRPacketField("criteria", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB),
        NDRSignedIntField("startIndex", 0),
        NDRSignedIntField("count", 0),
    ]


class QueryHistory_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


IUPDATESESSION3_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateSession_ClientApplicationID_Request,
        get_IUpdateSession_ClientApplicationID_Response,
    ),
    8: DceRpcOp(
        put_IUpdateSession_ClientApplicationID_Request,
        put_IUpdateSession_ClientApplicationID_Response,
    ),
    9: DceRpcOp(
        get_IUpdateSession_ReadOnly_Request, get_IUpdateSession_ReadOnly_Response
    ),
    # 10: Opnum11NotUsedOnWire,
    # 11: Opnum12NotUsedOnWire,
    12: DceRpcOp(CreateUpdateSearcher_Request, CreateUpdateSearcher_Response),
    # 13: Opnum14NotUsedOnWire,
    # 14: Opnum15NotUsedOnWire,
    15: DceRpcOp(
        get_IUpdateSession2_UserLocale_Request, get_IUpdateSession2_UserLocale_Response
    ),
    16: DceRpcOp(
        put_IUpdateSession2_UserLocale_Request, put_IUpdateSession2_UserLocale_Response
    ),
    17: DceRpcOp(
        CreateUpdateServiceManager_Request, CreateUpdateServiceManager_Response
    ),
    18: DceRpcOp(QueryHistory_Request, QueryHistory_Response),
}
register_com_interface(
    name="IUpdateSession3",
    uuid=uuid.UUID("918EFD1E-B5D8-4c90-8540-AEB9BDC56F9D"),
    opnums=IUPDATESESSION3_OPNUMS,
)


class get_IUpdateService_Name_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_Name_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateService_ContentValidationCert_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_ContentValidationCert_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(NDRPacketField("retval", wireVARIANTStr(), wireVARIANTStr)),
        NDRIntField("status", 0),
    ]


class get_IUpdateService_ExpirationDate_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_ExpirationDate_Response(NDRPacket):
    fields_desc = [NDRIEEEDoubleField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateService_IsManaged_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_IsManaged_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateService_IsRegisteredWithAU_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_IsRegisteredWithAU_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateService_IssueDate_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_IssueDate_Response(NDRPacket):
    fields_desc = [NDRIEEEDoubleField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateService_OffersWindowsUpdates_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_OffersWindowsUpdates_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateService_RedirectUrls_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_RedirectUrls_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateService_ServiceID_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_ServiceID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateService_IsScanPackageService_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_IsScanPackageService_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateService_CanRegisterWithAU_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_CanRegisterWithAU_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateService_ServiceUrl_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_ServiceUrl_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateService_SetupPrefix_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService_SetupPrefix_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


IUPDATESERVICE_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdateService_Name_Request, get_IUpdateService_Name_Response),
    8: DceRpcOp(
        get_IUpdateService_ContentValidationCert_Request,
        get_IUpdateService_ContentValidationCert_Response,
    ),
    9: DceRpcOp(
        get_IUpdateService_ExpirationDate_Request,
        get_IUpdateService_ExpirationDate_Response,
    ),
    10: DceRpcOp(
        get_IUpdateService_IsManaged_Request, get_IUpdateService_IsManaged_Response
    ),
    11: DceRpcOp(
        get_IUpdateService_IsRegisteredWithAU_Request,
        get_IUpdateService_IsRegisteredWithAU_Response,
    ),
    12: DceRpcOp(
        get_IUpdateService_IssueDate_Request, get_IUpdateService_IssueDate_Response
    ),
    13: DceRpcOp(
        get_IUpdateService_OffersWindowsUpdates_Request,
        get_IUpdateService_OffersWindowsUpdates_Response,
    ),
    14: DceRpcOp(
        get_IUpdateService_RedirectUrls_Request,
        get_IUpdateService_RedirectUrls_Response,
    ),
    15: DceRpcOp(
        get_IUpdateService_ServiceID_Request, get_IUpdateService_ServiceID_Response
    ),
    16: DceRpcOp(
        get_IUpdateService_IsScanPackageService_Request,
        get_IUpdateService_IsScanPackageService_Response,
    ),
    17: DceRpcOp(
        get_IUpdateService_CanRegisterWithAU_Request,
        get_IUpdateService_CanRegisterWithAU_Response,
    ),
    18: DceRpcOp(
        get_IUpdateService_ServiceUrl_Request, get_IUpdateService_ServiceUrl_Response
    ),
    19: DceRpcOp(
        get_IUpdateService_SetupPrefix_Request, get_IUpdateService_SetupPrefix_Response
    ),
}
register_com_interface(
    name="IUpdateService",
    uuid=uuid.UUID("76b3b17e-aed6-4da5-85f0-83587f81abe3"),
    opnums=IUPDATESERVICE_OPNUMS,
)


class get_IUpdateService2_IsDefaultAUService_Request(NDRPacket):
    fields_desc = []


class get_IUpdateService2_IsDefaultAUService_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


IUPDATESERVICE2_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(get_IUpdateService_Name_Request, get_IUpdateService_Name_Response),
    8: DceRpcOp(
        get_IUpdateService_ContentValidationCert_Request,
        get_IUpdateService_ContentValidationCert_Response,
    ),
    9: DceRpcOp(
        get_IUpdateService_ExpirationDate_Request,
        get_IUpdateService_ExpirationDate_Response,
    ),
    10: DceRpcOp(
        get_IUpdateService_IsManaged_Request, get_IUpdateService_IsManaged_Response
    ),
    11: DceRpcOp(
        get_IUpdateService_IsRegisteredWithAU_Request,
        get_IUpdateService_IsRegisteredWithAU_Response,
    ),
    12: DceRpcOp(
        get_IUpdateService_IssueDate_Request, get_IUpdateService_IssueDate_Response
    ),
    13: DceRpcOp(
        get_IUpdateService_OffersWindowsUpdates_Request,
        get_IUpdateService_OffersWindowsUpdates_Response,
    ),
    14: DceRpcOp(
        get_IUpdateService_RedirectUrls_Request,
        get_IUpdateService_RedirectUrls_Response,
    ),
    15: DceRpcOp(
        get_IUpdateService_ServiceID_Request, get_IUpdateService_ServiceID_Response
    ),
    16: DceRpcOp(
        get_IUpdateService_IsScanPackageService_Request,
        get_IUpdateService_IsScanPackageService_Response,
    ),
    17: DceRpcOp(
        get_IUpdateService_CanRegisterWithAU_Request,
        get_IUpdateService_CanRegisterWithAU_Response,
    ),
    18: DceRpcOp(
        get_IUpdateService_ServiceUrl_Request, get_IUpdateService_ServiceUrl_Response
    ),
    19: DceRpcOp(
        get_IUpdateService_SetupPrefix_Request, get_IUpdateService_SetupPrefix_Response
    ),
    20: DceRpcOp(
        get_IUpdateService2_IsDefaultAUService_Request,
        get_IUpdateService2_IsDefaultAUService_Response,
    ),
}
register_com_interface(
    name="IUpdateService2",
    uuid=uuid.UUID("1518b460-6518-4172-940f-c75883b24ceb"),
    opnums=IUPDATESERVICE2_OPNUMS,
)


class get_IUpdateServiceCollection_Item_Request(NDRPacket):
    fields_desc = [NDRSignedIntField("index", 0)]


class get_IUpdateServiceCollection_Item_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateServiceCollection__NewEnum_Request(NDRPacket):
    fields_desc = []


class get_IUpdateServiceCollection__NewEnum_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateServiceCollection_Count_Request(NDRPacket):
    fields_desc = []


class get_IUpdateServiceCollection_Count_Response(NDRPacket):
    fields_desc = [NDRSignedIntField("retval", 0), NDRIntField("status", 0)]


IUPDATESERVICECOLLECTION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateServiceCollection_Item_Request,
        get_IUpdateServiceCollection_Item_Response,
    ),
    8: DceRpcOp(
        get_IUpdateServiceCollection__NewEnum_Request,
        get_IUpdateServiceCollection__NewEnum_Response,
    ),
    9: DceRpcOp(
        get_IUpdateServiceCollection_Count_Request,
        get_IUpdateServiceCollection_Count_Response,
    ),
}
register_com_interface(
    name="IUpdateServiceCollection",
    uuid=uuid.UUID("9b0353aa-0e52-44ff-b8b0-1f7fa0437f88"),
    opnums=IUPDATESERVICECOLLECTION_OPNUMS,
)


class UpdateServiceRegistrationState(IntEnum):
    usrsNotRegistered = 1
    usrsRegistrationPending = 2
    usrsRegistered = 3


class get_IUpdateServiceRegistration_RegistrationState_Request(NDRPacket):
    fields_desc = []


class get_IUpdateServiceRegistration_RegistrationState_Response(NDRPacket):
    fields_desc = [
        NDRIntEnumField("retval", 0, UpdateServiceRegistrationState),
        NDRIntField("status", 0),
    ]


class get_IUpdateServiceRegistration_ServiceID_Request(NDRPacket):
    fields_desc = []


class get_IUpdateServiceRegistration_ServiceID_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", FLAGGED_WORD_BLOB(), FLAGGED_WORD_BLOB)
        ),
        NDRIntField("status", 0),
    ]


class get_IUpdateServiceRegistration_IsPendingRegistrationWithAU_Request(NDRPacket):
    fields_desc = []


class get_IUpdateServiceRegistration_IsPendingRegistrationWithAU_Response(NDRPacket):
    fields_desc = [NDRSignedShortField("retval", 0), NDRIntField("status", 0)]


class get_IUpdateServiceRegistration_Service_Request(NDRPacket):
    fields_desc = []


class get_IUpdateServiceRegistration_Service_Response(NDRPacket):
    fields_desc = [
        NDRFullPointerField(
            NDRPacketField("retval", MInterfacePointer(), MInterfacePointer)
        ),
        NDRIntField("status", 0),
    ]


IUPDATESERVICEREGISTRATION_OPNUMS = {  # 0: Opnum0NotUsedOnWire,
    # 1: Opnum1NotUsedOnWire,
    # 2: Opnum2NotUsedOnWire,
    3: DceRpcOp(GetTypeInfoCount_Request, GetTypeInfoCount_Response),
    4: DceRpcOp(GetTypeInfo_Request, GetTypeInfo_Response),
    5: DceRpcOp(GetIDsOfNames_Request, GetIDsOfNames_Response),
    6: DceRpcOp(Invoke_Request, Invoke_Response),
    7: DceRpcOp(
        get_IUpdateServiceRegistration_RegistrationState_Request,
        get_IUpdateServiceRegistration_RegistrationState_Response,
    ),
    8: DceRpcOp(
        get_IUpdateServiceRegistration_ServiceID_Request,
        get_IUpdateServiceRegistration_ServiceID_Response,
    ),
    9: DceRpcOp(
        get_IUpdateServiceRegistration_IsPendingRegistrationWithAU_Request,
        get_IUpdateServiceRegistration_IsPendingRegistrationWithAU_Response,
    ),
    10: DceRpcOp(
        get_IUpdateServiceRegistration_Service_Request,
        get_IUpdateServiceRegistration_Service_Response,
    ),
}
register_com_interface(
    name="IUpdateServiceRegistration",
    uuid=uuid.UUID("dde02280-12b3-4e0b-937b-6747f6acb286"),
    opnums=IUPDATESERVICEREGISTRATION_OPNUMS,
)
